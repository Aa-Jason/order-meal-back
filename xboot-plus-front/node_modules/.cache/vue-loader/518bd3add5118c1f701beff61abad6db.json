{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\sys\\redis\\redisMonitor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\sys\\redis\\redisMonitor.vue","mtime":1651629755228},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1651770037115},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBnZXRSZWRpc0tleVNpemUsIGdldFJlZGlzTWVtb3J5LCBnZXRSZWRpc0luZm8gfSBmcm9tICJAL2FwaS9pbmRleCI7DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJyZWRpc01vbml0b3IiLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtZW1vcnk6IHsNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgbmFtZTogIuWGheWtmChLQikiLA0KICAgICAgICAgICAgZGF0YTogWzBdLA0KICAgICAgICAgIH0sDQogICAgICAgIF0sDQogICAgICAgIGNoYXJ0T3B0aW9uczogew0KICAgICAgICAgIGNoYXJ0OiB7DQogICAgICAgICAgICBhbmltYXRpb25zOiB7DQogICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsDQogICAgICAgICAgICAgIGVhc2luZzogImxpbmVhciIsDQogICAgICAgICAgICAgIGR5bmFtaWNBbmltYXRpb246IHsNCiAgICAgICAgICAgICAgICBzcGVlZDogNTAwMCwNCiAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB0b29sYmFyOiB7DQogICAgICAgICAgICAgIHNob3c6IGZhbHNlLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHpvb206IHsNCiAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UsDQogICAgICAgICAgICB9LA0KICAgICAgICAgIH0sDQogICAgICAgICAgZGF0YUxhYmVsczogew0KICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UsDQogICAgICAgICAgfSwNCiAgICAgICAgICBzdHJva2U6IHsNCiAgICAgICAgICAgIGN1cnZlOiAic21vb3RoIiwNCiAgICAgICAgICB9LA0KICAgICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgICB0ZXh0OiAiUmVkaXPlhoXlrZjlrp7ml7bljaDnlKjmg4XlhrXvvIhLQu+8iSIsDQogICAgICAgICAgICBhbGlnbjogImxlZnQiLA0KICAgICAgICAgIH0sDQogICAgICAgICAgbWFya2Vyczogew0KICAgICAgICAgICAgc2l6ZTogMCwNCiAgICAgICAgICB9LA0KICAgICAgICAgIHhheGlzOiB7fSwNCiAgICAgICAgICB5YXhpczoge30sDQogICAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgICBzaG93OiBmYWxzZSwNCiAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgICBkYXRhOiBbXSwNCiAgICAgICAgeGRhdGE6IFtdLA0KICAgICAgfSwNCiAgICAgIGtleTogew0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBuYW1lOiAia2V55pWw6YePIiwNCiAgICAgICAgICAgIGRhdGE6IFswXSwNCiAgICAgICAgICB9LA0KICAgICAgICBdLA0KICAgICAgICBjaGFydE9wdGlvbnM6IHsNCiAgICAgICAgICBjaGFydDogew0KICAgICAgICAgICAgYW5pbWF0aW9uczogew0KICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLA0KICAgICAgICAgICAgICBlYXNpbmc6ICJsaW5lYXIiLA0KICAgICAgICAgICAgICBkeW5hbWljQW5pbWF0aW9uOiB7DQogICAgICAgICAgICAgICAgc3BlZWQ6IDUwMDAsDQogICAgICAgICAgICAgIH0sDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgdG9vbGJhcjogew0KICAgICAgICAgICAgICBzaG93OiBmYWxzZSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB6b29tOiB7DQogICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICB9LA0KICAgICAgICAgIGRhdGFMYWJlbHM6IHsNCiAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLA0KICAgICAgICAgIH0sDQogICAgICAgICAgY29sb3JzOiBbIiNmNTU2NGUiXSwNCiAgICAgICAgICBzdHJva2U6IHsNCiAgICAgICAgICAgIGN1cnZlOiAic21vb3RoIiwNCiAgICAgICAgICB9LA0KICAgICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgICB0ZXh0OiAiUmVkaXMga2V55a6e5pe25pWw6YeP77yI5Liq77yJIiwNCiAgICAgICAgICAgIGFsaWduOiAibGVmdCIsDQogICAgICAgICAgfSwNCiAgICAgICAgICBtYXJrZXJzOiB7DQogICAgICAgICAgICBzaXplOiAwLA0KICAgICAgICAgIH0sDQogICAgICAgICAgeGF4aXM6IHt9LA0KICAgICAgICAgIHlheGlzOiB7fSwNCiAgICAgICAgICBsZWdlbmQ6IHsNCiAgICAgICAgICAgIHNob3c6IGZhbHNlLA0KICAgICAgICAgIH0sDQogICAgICAgIH0sDQogICAgICAgIGRhdGE6IFtdLA0KICAgICAgICB4ZGF0YTogW10sDQogICAgICB9LA0KICAgICAgY29sdW1uczogWw0KICAgICAgICB7DQogICAgICAgICAga2V5OiAia2V5IiwNCiAgICAgICAgICBtaW5XaWR0aDogMjAwLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAga2V5OiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgIG1pbldpZHRoOiA1MDAsDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBrZXk6ICJ2YWx1ZSIsDQogICAgICAgICAgd2lkdGg6IDQwMCwNCiAgICAgICAgfSwNCiAgICAgIF0sDQogICAgICByZWRpc0luZm86IFtdLA0KICAgICAgdGltZXI6IG51bGwsDQogICAgICBtaW5NZW1vcnk6IDFlMTAsDQogICAgICBtYXhNZW1vcnk6IC0xZTEwLA0KICAgICAgbWluU2l6ZTogMWUxMCwNCiAgICAgIG1heFNpemU6IC0xZTEwLA0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBpbml0KCkgew0KICAgICAgdGhpcy5nZXREYXRhKCk7DQogICAgICB0aGlzLmdldEluZm8oKTsNCiAgICB9LA0KICAgIC8vIOe7n+iuoQ0KICAgIGdldERhdGEoKSB7DQogICAgICB0aGlzLmdldFJlcXVlc3REYXRhKCk7DQogICAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICB0aGlzLmdldFJlcXVlc3REYXRhKCk7DQogICAgICB9LCA1MDAwKTsNCiAgICB9LA0KICAgIGdldFJlcXVlc3REYXRhKCkgew0KICAgICAgLy8g5YaF5a2YDQogICAgICBnZXRSZWRpc01lbW9yeSgpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICBsZXQgY3VycmVudE1lbW9yeSA9IE51bWJlcihyZXMucmVzdWx0Lm1lbW9yeSkgLyAxMDI0Ow0KICAgICAgICAvLyDmm7TmlrDmnIDlpKfmnIDlsI/lgLwNCiAgICAgICAgaWYgKGN1cnJlbnRNZW1vcnkgPCB0aGlzLm1pbk1lbW9yeSkgew0KICAgICAgICAgIHRoaXMubWluTWVtb3J5ID0gY3VycmVudE1lbW9yeTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoY3VycmVudE1lbW9yeSA+IHRoaXMubWF4TWVtb3J5KSB7DQogICAgICAgICAgdGhpcy5tYXhNZW1vcnkgPSBjdXJyZW50TWVtb3J5Ow0KICAgICAgICB9DQoNCiAgICAgICAgdGhpcy5tZW1vcnkuZGF0YS5wdXNoKE51bWJlcihjdXJyZW50TWVtb3J5LnRvRml4ZWQoMikpKTsNCiAgICAgICAgdGhpcy5tZW1vcnkueGRhdGEucHVzaChyZXMucmVzdWx0LnRpbWUpOw0KICAgICAgICAvLyA15Liq54K5DQogICAgICAgIGlmICh0aGlzLm1lbW9yeS5kYXRhLmxlbmd0aCA+PSA2KSB7DQogICAgICAgICAgdGhpcy5tZW1vcnkuZGF0YS5zaGlmdCgpOw0KICAgICAgICAgIHRoaXMubWVtb3J5LnhkYXRhLnNoaWZ0KCk7DQogICAgICAgIH0NCiAgICAgICAgLy8g5pu05paw54K55L+h5oGvDQogICAgICAgIHRoaXMuJHJlZnMubWVtb3J5SW5mby51cGRhdGVTZXJpZXMoWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIG5hbWU6ICLlhoXlrZgoS0IpIiwNCiAgICAgICAgICAgIGRhdGE6IHRoaXMubWVtb3J5LmRhdGEsDQogICAgICAgICAgfSwNCiAgICAgICAgXSk7DQoNCiAgICAgICAgLy8g5pu05paw5pyA5aSn5pyA5bCP5YC8DQogICAgICAgIHRoaXMuJHJlZnMubWVtb3J5SW5mby51cGRhdGVPcHRpb25zKA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHhheGlzOiB7DQogICAgICAgICAgICAgIGNhdGVnb3JpZXM6IHRoaXMubWVtb3J5LnhkYXRhLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHlheGlzOiB7DQogICAgICAgICAgICAgIG1pbjogdGhpcy5taW5NZW1vcnkgLSAyLA0KICAgICAgICAgICAgICBtYXg6IHRoaXMubWF4TWVtb3J5ICsgMiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgICB0cnVlLA0KICAgICAgICAgIHRydWUNCiAgICAgICAgKTsNCiAgICAgIH0pOw0KICAgICAgLy8g6ZSu5YC8DQogICAgICBnZXRSZWRpc0tleVNpemUoKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgbGV0IGN1cnJlbnRTaXplID0gcmVzLnJlc3VsdC5rZXlTaXplOw0KICAgICAgICAvLyDmm7TmlrDmnIDlpKfmnIDlsI/lgLwNCiAgICAgICAgaWYgKGN1cnJlbnRTaXplIDwgdGhpcy5taW5TaXplKSB7DQogICAgICAgICAgdGhpcy5taW5TaXplID0gY3VycmVudFNpemU7DQogICAgICAgIH0NCiAgICAgICAgaWYgKGN1cnJlbnRTaXplID4gdGhpcy5tYXhTaXplKSB7DQogICAgICAgICAgdGhpcy5tYXhTaXplID0gY3VycmVudFNpemU7DQogICAgICAgIH0NCg0KICAgICAgICB0aGlzLmtleS5kYXRhLnB1c2goY3VycmVudFNpemUpOw0KICAgICAgICB0aGlzLmtleS54ZGF0YS5wdXNoKHJlcy5yZXN1bHQudGltZSk7DQogICAgICAgIC8vIDXkuKrngrkNCiAgICAgICAgaWYgKHRoaXMua2V5LmRhdGEubGVuZ3RoID49IDYpIHsNCiAgICAgICAgICB0aGlzLmtleS5kYXRhLnNoaWZ0KCk7DQogICAgICAgICAgdGhpcy5rZXkueGRhdGEuc2hpZnQoKTsNCiAgICAgICAgfQ0KICAgICAgICAvLyDmm7TmlrDngrnkv6Hmga8NCiAgICAgICAgdGhpcy4kcmVmcy5rZXlTaXplLnVwZGF0ZVNlcmllcyhbDQogICAgICAgICAgew0KICAgICAgICAgICAgbmFtZTogImtleeaVsOmHjyIsDQogICAgICAgICAgICBkYXRhOiB0aGlzLmtleS5kYXRhLA0KICAgICAgICAgIH0sDQogICAgICAgIF0pOw0KICAgICAgICAvLyDmm7TmlrDmnIDlpKfmnIDlsI/lgLwNCiAgICAgICAgdGhpcy4kcmVmcy5rZXlTaXplLnVwZGF0ZU9wdGlvbnMoDQogICAgICAgICAgew0KICAgICAgICAgICAgeGF4aXM6IHsNCiAgICAgICAgICAgICAgY2F0ZWdvcmllczogdGhpcy5rZXkueGRhdGEsDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgLy8g6YG/5YWN5pyA5aSn5pyA5bCP5YC85LiA6Ie0DQogICAgICAgICAgICB5YXhpczogew0KICAgICAgICAgICAgICBtaW46IHRoaXMubWluU2l6ZSAtIDIsDQogICAgICAgICAgICAgIG1heDogdGhpcy5tYXhTaXplICsgMiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgICB0cnVlLA0KICAgICAgICAgIHRydWUNCiAgICAgICAgKTsNCiAgICAgIH0pOw0KICAgIH0sDQogICAgZ2V0SW5mbygpIHsNCiAgICAgIGdldFJlZGlzSW5mbygpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICBsZXQgZGF0YSA9IFtdOw0KICAgICAgICByZXMucmVzdWx0LmZvckVhY2goKGUpID0+IHsNCiAgICAgICAgICBpZiAoZS5kZXNjcmlwdGlvbikgew0KICAgICAgICAgICAgZGF0YS5wdXNoKGUpOw0KICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgICAgIHRoaXMucmVkaXNJbmZvID0gZGF0YTsNCiAgICAgIH0pOw0KICAgIH0sDQogIH0sDQogIGJlZm9yZURlc3Ryb3koKSB7DQogICAgaWYgKHRoaXMudGltZXIpIHsNCiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuaW5pdCgpOw0KICB9LA0KfTsNCg=="},{"version":3,"sources":["redisMonitor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"redisMonitor.vue","sourceRoot":"src/views/sys/redis","sourcesContent":["<template>\r\n  <div>\r\n    <Row>\r\n      <Col span=\"12\">\r\n        <apexchart\r\n          ref=\"memoryInfo\"\r\n          type=\"area\"\r\n          height=\"350\"\r\n          :options=\"memory.chartOptions\"\r\n          :series=\"memory.series\"\r\n        />\r\n      </Col>\r\n      <Col span=\"12\">\r\n        <apexchart\r\n          ref=\"keySize\"\r\n          type=\"area\"\r\n          height=\"350\"\r\n          :options=\"key.chartOptions\"\r\n          :series=\"key.series\"\r\n        />\r\n      </Col>\r\n    </Row>\r\n    <Divider orientation=\"left\">Redis详细信息</Divider>\r\n    <Table\r\n      :columns=\"columns\"\r\n      :data=\"redisInfo\"\r\n      :show-header=\"false\"\r\n      size=\"small\"\r\n    ></Table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getRedisKeySize, getRedisMemory, getRedisInfo } from \"@/api/index\";\r\nexport default {\r\n  name: \"redisMonitor\",\r\n  data() {\r\n    return {\r\n      memory: {\r\n        series: [\r\n          {\r\n            name: \"内存(KB)\",\r\n            data: [0],\r\n          },\r\n        ],\r\n        chartOptions: {\r\n          chart: {\r\n            animations: {\r\n              enabled: true,\r\n              easing: \"linear\",\r\n              dynamicAnimation: {\r\n                speed: 5000,\r\n              },\r\n            },\r\n            toolbar: {\r\n              show: false,\r\n            },\r\n            zoom: {\r\n              enabled: false,\r\n            },\r\n          },\r\n          dataLabels: {\r\n            enabled: false,\r\n          },\r\n          stroke: {\r\n            curve: \"smooth\",\r\n          },\r\n          title: {\r\n            text: \"Redis内存实时占用情况（KB）\",\r\n            align: \"left\",\r\n          },\r\n          markers: {\r\n            size: 0,\r\n          },\r\n          xaxis: {},\r\n          yaxis: {},\r\n          legend: {\r\n            show: false,\r\n          },\r\n        },\r\n        data: [],\r\n        xdata: [],\r\n      },\r\n      key: {\r\n        series: [\r\n          {\r\n            name: \"key数量\",\r\n            data: [0],\r\n          },\r\n        ],\r\n        chartOptions: {\r\n          chart: {\r\n            animations: {\r\n              enabled: true,\r\n              easing: \"linear\",\r\n              dynamicAnimation: {\r\n                speed: 5000,\r\n              },\r\n            },\r\n            toolbar: {\r\n              show: false,\r\n            },\r\n            zoom: {\r\n              enabled: false,\r\n            },\r\n          },\r\n          dataLabels: {\r\n            enabled: false,\r\n          },\r\n          colors: [\"#f5564e\"],\r\n          stroke: {\r\n            curve: \"smooth\",\r\n          },\r\n          title: {\r\n            text: \"Redis key实时数量（个）\",\r\n            align: \"left\",\r\n          },\r\n          markers: {\r\n            size: 0,\r\n          },\r\n          xaxis: {},\r\n          yaxis: {},\r\n          legend: {\r\n            show: false,\r\n          },\r\n        },\r\n        data: [],\r\n        xdata: [],\r\n      },\r\n      columns: [\r\n        {\r\n          key: \"key\",\r\n          minWidth: 200,\r\n        },\r\n        {\r\n          key: \"description\",\r\n          minWidth: 500,\r\n        },\r\n        {\r\n          key: \"value\",\r\n          width: 400,\r\n        },\r\n      ],\r\n      redisInfo: [],\r\n      timer: null,\r\n      minMemory: 1e10,\r\n      maxMemory: -1e10,\r\n      minSize: 1e10,\r\n      maxSize: -1e10,\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.getData();\r\n      this.getInfo();\r\n    },\r\n    // 统计\r\n    getData() {\r\n      this.getRequestData();\r\n      this.timer = setInterval(() => {\r\n        this.getRequestData();\r\n      }, 5000);\r\n    },\r\n    getRequestData() {\r\n      // 内存\r\n      getRedisMemory().then((res) => {\r\n        let currentMemory = Number(res.result.memory) / 1024;\r\n        // 更新最大最小值\r\n        if (currentMemory < this.minMemory) {\r\n          this.minMemory = currentMemory;\r\n        }\r\n        if (currentMemory > this.maxMemory) {\r\n          this.maxMemory = currentMemory;\r\n        }\r\n\r\n        this.memory.data.push(Number(currentMemory.toFixed(2)));\r\n        this.memory.xdata.push(res.result.time);\r\n        // 5个点\r\n        if (this.memory.data.length >= 6) {\r\n          this.memory.data.shift();\r\n          this.memory.xdata.shift();\r\n        }\r\n        // 更新点信息\r\n        this.$refs.memoryInfo.updateSeries([\r\n          {\r\n            name: \"内存(KB)\",\r\n            data: this.memory.data,\r\n          },\r\n        ]);\r\n\r\n        // 更新最大最小值\r\n        this.$refs.memoryInfo.updateOptions(\r\n          {\r\n            xaxis: {\r\n              categories: this.memory.xdata,\r\n            },\r\n            yaxis: {\r\n              min: this.minMemory - 2,\r\n              max: this.maxMemory + 2,\r\n            },\r\n          },\r\n          true,\r\n          true\r\n        );\r\n      });\r\n      // 键值\r\n      getRedisKeySize().then((res) => {\r\n        let currentSize = res.result.keySize;\r\n        // 更新最大最小值\r\n        if (currentSize < this.minSize) {\r\n          this.minSize = currentSize;\r\n        }\r\n        if (currentSize > this.maxSize) {\r\n          this.maxSize = currentSize;\r\n        }\r\n\r\n        this.key.data.push(currentSize);\r\n        this.key.xdata.push(res.result.time);\r\n        // 5个点\r\n        if (this.key.data.length >= 6) {\r\n          this.key.data.shift();\r\n          this.key.xdata.shift();\r\n        }\r\n        // 更新点信息\r\n        this.$refs.keySize.updateSeries([\r\n          {\r\n            name: \"key数量\",\r\n            data: this.key.data,\r\n          },\r\n        ]);\r\n        // 更新最大最小值\r\n        this.$refs.keySize.updateOptions(\r\n          {\r\n            xaxis: {\r\n              categories: this.key.xdata,\r\n            },\r\n            // 避免最大最小值一致\r\n            yaxis: {\r\n              min: this.minSize - 2,\r\n              max: this.maxSize + 2,\r\n            },\r\n          },\r\n          true,\r\n          true\r\n        );\r\n      });\r\n    },\r\n    getInfo() {\r\n      getRedisInfo().then((res) => {\r\n        let data = [];\r\n        res.result.forEach((e) => {\r\n          if (e.description) {\r\n            data.push(e);\r\n          }\r\n        });\r\n        this.redisInfo = data;\r\n      });\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n</style>"]}]}
{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\activiti\\apply-manage\\applyManage.vue?vue&type=template&id=3fc723ee&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\activiti\\apply-manage\\applyManage.vue","mtime":1651629755125},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651770027143},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
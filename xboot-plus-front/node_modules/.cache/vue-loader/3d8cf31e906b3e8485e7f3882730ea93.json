{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\Main.vue?vue&type=template&id=c1f1971a&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\Main.vue","mtime":1652257459697},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651770027143},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgeyBzdGF0aWNDbGFzczogIm1haW4iLCBjbGFzczogeyAibWFpbi1oaWRlLXRleHQiOiBfdm0uc2hyaW5rIH0gfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgY2xhc3M6ICJzaWRlYmFyLW1lbnUtY29udGVudCBzaWRlLWJhci1tZW51LXRoZW1lLSIgKyBfdm0ubWVudVRoZW1lLAogICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgd2lkdGg6IF92bS5zaHJpbmsgPyAiNjBweCIgOiBfdm0ubWVudVdpZHRoICsgInB4IiwKICAgICAgICAgICAgb3ZlcmZsb3c6IF92bS5zaHJpbmsgPyAidmlzaWJsZSIgOiAiYXV0byIsCiAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJzaHJpbmthYmxlLW1lbnUiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIHNocmluazogX3ZtLnNocmluaywKICAgICAgICAgICAgICAgIHRoZW1lOiBfdm0ubWVudVRoZW1lLAogICAgICAgICAgICAgICAgImJlZm9yZS1wdXNoIjogX3ZtLmJlZm9yZVB1c2gsCiAgICAgICAgICAgICAgICAibWVudS1saXN0IjogX3ZtLm1lbnVMaXN0LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgb246IHsgIm9uLWNoYW5nZSI6IF92bS5oYW5kbGVTdWJtZW51Q2hhbmdlIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfdm0uc2hvd0xvZ28gfHwgX3ZtLmZpeE5hdgogICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImxvZ28tY29udGVudCIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzbG90OiAidG9wIiB9LAogICAgICAgICAgICAgICAgICAgICAgc2xvdDogInRvcCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIV92bS5zaHJpbmsgJiYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLm1lbnVUaGVtZSA9PSAibGlnaHQiICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5tYWluVGhlbWUgIT0gImRhcmtNb2RlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIhc2hyaW5rICYmIG1lbnVUaGVtZSA9PSAnbGlnaHQnICYmIG1haW5UaGVtZSAhPSAnZGFya01vZGUnIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2xvZ28tYmxhY2sucG5nIikgfSwKICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5zaHJpbmssCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2hyaW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICBrZXk6ICJtaW4tbG9nbyIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiQC9hc3NldHMvbG9nby1taW4ucG5nIikgfSwKICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgY2xhc3M6ICJtYWluLWhlYWRlci1jb250ZW50IGZpeC1uYXYtIiArIF92bS5maXhOYXYsCiAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICBwYWRkaW5nTGVmdDogX3ZtLm5hdlBhZGRpbmdMZWZ0LAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IGNsYXNzOiAibWFpbi1oZWFkZXIgaGVhZGVyLXRoZW1lLSIgKyBfdm0ubmF2VGhlbWUgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1sZWZ0IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLmZpeE5hdiAmJiBfdm0uc2hvd0xvZ28KICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmaXgtbG9nbyIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjIyMHB4IiB9LAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLm5hdlRoZW1lID09ICJsaWdodCIgJiYgX3ZtLm1haW5UaGVtZSAhPSAiZGFya01vZGUiCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiQC9hc3NldHMvbG9nby1ibGFjay5wbmciKSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIDogX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogIm1heC1sb2dvIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiQC9hc3NldHMvbG9nby13aGl0ZS5wbmciKSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBfdm0uc2hvd0ZvbGQKICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItbmF2aWNvbi1jb250ZW50IGhlYWRlci1hY3Rpb24iLAogICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS50b2dnbGVDbGljayB9LAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoIkljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnNocmluaywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0aGlzLnNocmluayIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjdXN0b206ICJpY29uZm9udCBpY29uLW1lbnUtdW5mb2xkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiAiMjAiLAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBfYygiSWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICF0aGlzLnNocmluaywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICIhdGhpcy5zaHJpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tOiAiaWNvbmZvbnQgaWNvbi1tZW51LWZvbGQiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6ICIyMCIsCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1taWRkbGUtY29udGVudCIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLm5hdlR5cGUgPT0gMQogICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJuYXZNZW51IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVtZTogX3ZtLm5hdlRoZW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Vyck5hdjogX3ZtLmN1cnJOYXYsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXZMaXN0OiBfdm0ubmF2TGlzdCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsaWNlTnVtOiBfdm0uY3VyclNsaWNlTnVtLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0ljb246IF92bS5zaG93TmF2TWVudUljb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyAib24tY2xpY2siOiBfdm0uc2VsZWN0TmF2IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBfdm0ubmF2VHlwZSA9PSAyCiAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoIm5hdkFwcCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VyclR5cGU6ICJ0YWJzIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlbWVudDogImJvdHRvbS1zdGFydCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyTmF2VGl0bGU6IF92bS5jdXJyTmF2VGl0bGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyTmF2OiBfdm0uY3Vyck5hdiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdkxpc3Q6IF92bS5uYXZMaXN0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogX3ZtLm5hdlNob3dUeXBlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlbWU6IF92bS5uYXZUaGVtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7ICJvbi1jbGljayI6IF92bS5zZWxlY3ROYXYgfSwKICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgIF92bS5uYXZUeXBlID09IDMKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1haW4tYnJlYWRjcnVtYiIgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImJyZWFkY3J1bWItbmF2IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVtZTogX3ZtLm5hdlRoZW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFBhdGg6IF92bS5jdXJyZW50UGF0aCwKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1yaWdodC1jb250ZW50IiB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF92bS5zaG93U2VhcmNoCiAgICAgICAgICAgICAgICAgID8gX2MoInNlYXJjaCIsIHsKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRoZW1lOiBfdm0ubmF2VGhlbWUsIHR5cGU6IF92bS5zZWFyY2hUeXBlIH0sCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgIF92bS5uYXZUeXBlID09IDMKICAgICAgICAgICAgICAgICAgPyBfYygibmF2QXBwIiwgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgY3Vyck5hdjogX3ZtLmN1cnJOYXYsCiAgICAgICAgICAgICAgICAgICAgICAgIG5hdkxpc3Q6IF92bS5uYXZMaXN0LAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBfdm0ubmF2U2hvd1R5cGUsCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsgIm9uLWNsaWNrIjogX3ZtLnNlbGVjdE5hdiB9LAogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICBfYygiZnVsbC1zY3JlZW4iLCB7CiAgICAgICAgICAgICAgICAgIG9uOiB7ICJvbi1jaGFuZ2UiOiBfdm0uZnVsbHNjcmVlbkNoYW5nZSB9LAogICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uaXNGdWxsU2NyZWVuLAogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNGdWxsU2NyZWVuID0gJCR2CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiaXNGdWxsU2NyZWVuIiwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoImxhbmd1YWdlIiksCiAgICAgICAgICAgICAgICBfYygibWVzc2FnZS10aXAiKSwKICAgICAgICAgICAgICAgIF9jKCJ1c2VyIiksCiAgICAgICAgICAgICAgICBfYygidGhlbWUiKSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgIF0KICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJuYXYtdGFncyIsCiAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICBwYWRkaW5nTGVmdDogX3ZtLnNocmluayA/ICI2MHB4IiA6IF92bS5tZW51V2lkdGggKyAicHgiLAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF92bS5zaG93VGFncwogICAgICAgICAgICA/IF9jKCJ0YWdzLXBhZ2Utb3BlbmVkIiwgewogICAgICAgICAgICAgICAgYXR0cnM6IHsgcGFnZVRhZ3NMaXN0OiBfdm0ucGFnZVRhZ3NMaXN0IH0sCiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJzaW5nbGUtcGFnZS1jb250ZW50IiwKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgIGxlZnQ6IF92bS5zaHJpbmsgPyAiNjBweCIgOiBfdm0ubWVudVdpZHRoICsgInB4IiwKICAgICAgICAgICAgdG9wOiBfdm0uc2hvd1RhZ3MgPyAiMTAwcHgiIDogIjYwcHgiLAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInNpbmdsZS1wYWdlIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAia2VlcC1hbGl2ZSIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGluY2x1ZGU6IF92bS5jYWNoZVBhZ2UgfSB9LAogICAgICAgICAgICAgICAgW19jKCJyb3V0ZXItdmlldyIpXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLnNob3dGb290ZXIKICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1haW4tcGFnZS1mb290ZXItY29udGVudCIgfSwKICAgICAgICAgICAgICAgIFtfYygiRm9vdGVyIiwgeyBzdGF0aWNDbGFzczogIm1haW4tcGFnZS1mb290ZXIiIH0pXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgXQogICAgICApLAogICAgICBfYygiY2lyY2xlTG9hZGluZyIsIHsKICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgIHZhbHVlOiBfdm0ubG9hZGluZywKICAgICAgICAgICAgZXhwcmVzc2lvbjogImxvYWRpbmciLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIHN0YXRpY0NsYXNzOiAibG9hZGluZy1wb3NpdGlvbiIsCiAgICAgIH0pLAogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}
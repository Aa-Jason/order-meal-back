{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\message\\message.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\message\\message.vue","mtime":1651629755176},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651770028580},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651770027142},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1651770027415},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1651770042155},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICIuL21lc3NhZ2UubGVzcyI7DQo="},{"version":3,"sources":["message.vue"],"names":[],"mappings":";AACA","file":"message.vue","sourceRoot":"src/views/message","sourcesContent":["<style lang=\"less\">\r\n@import \"./message.less\";\r\n</style>\r\n\r\n<template>\r\n  <div class=\"own-space-message-content\" :style=\"{ height: height }\">\r\n    <div class=\"message-main-content\">\r\n      <div class=\"message-mainlist-content\">\r\n        <div>\r\n          <Button\r\n            @click=\"setCurrentMesType('unread')\"\r\n            size=\"large\"\r\n            long\r\n            type=\"text\"\r\n          >\r\n            <div class=\"mes-wrap\">\r\n              <transition name=\"mes-current-type-btn\">\r\n                <Icon\r\n                  v-show=\"currentMesType == 'unread'\"\r\n                  type=\"md-checkmark\"\r\n                ></Icon>\r\n              </transition>\r\n              <span class=\"mes-type-btn-text\">未读消息</span>\r\n              <Badge\r\n                class=\"message-count-badge-outer\"\r\n                class-name=\"message-count-badge-red\"\r\n                :count=\"unreadCount\"\r\n              ></Badge>\r\n            </div>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            @click=\"setCurrentMesType('hasread')\"\r\n            size=\"large\"\r\n            long\r\n            type=\"text\"\r\n          >\r\n            <div class=\"mes-wrap\">\r\n              <transition name=\"mes-current-type-btn\">\r\n                <Icon\r\n                  v-show=\"currentMesType == 'hasread'\"\r\n                  type=\"md-checkmark\"\r\n                ></Icon>\r\n              </transition>\r\n              <span class=\"mes-type-btn-text\">已读消息</span>\r\n              <Badge\r\n                class=\"message-count-badge-outer\"\r\n                class-name=\"message-count-badge\"\r\n                :count=\"hasreadCount\"\r\n              ></Badge>\r\n            </div>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div class=\"message-content-content\">\r\n        <transition name=\"view-message\">\r\n          <div v-if=\"showMesList\" class=\"message-title-list-content\">\r\n            <Table\r\n              ref=\"messageList\"\r\n              :loading=\"loading\"\r\n              :columns=\"columns\"\r\n              :data=\"mesList\"\r\n            ></Table>\r\n            <div class=\"message-page\">\r\n              <Poptip\r\n                confirm\r\n                transfer\r\n                title=\"确定标记所有消息为已读？\"\r\n                @on-ok=\"readAll\"\r\n                v-if=\"currentMesType == 'unread'\"\r\n              >\r\n                <Button icon=\"md-notifications-off\" :disabled=\"unreadCount <= 0\"\r\n                  >全部标记已读</Button\r\n                >\r\n              </Poptip>\r\n              <Poptip\r\n                confirm\r\n                transfer\r\n                title=\"确定彻底删除所有已读消息？\"\r\n                @on-ok=\"deleteAll\"\r\n                v-if=\"currentMesType == 'hasread'\"\r\n              >\r\n                <Button icon=\"md-trash\" :disabled=\"hasreadCount <= 0\"\r\n                  >全部彻底删除</Button\r\n                >\r\n              </Poptip>\r\n              <Page\r\n                :current=\"params.pageNumber\"\r\n                :total=\"total\"\r\n                :page-size=\"params.pageSize\"\r\n                @on-change=\"changePage\"\r\n                @on-page-size-change=\"changePageSize\"\r\n                :page-size-opts=\"[5, 10]\"\r\n                size=\"small\"\r\n                show-total\r\n                show-elevator\r\n                show-sizer\r\n                class=\"page-fix\"\r\n              ></Page>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n        <transition name=\"back-message-list\">\r\n          <div v-if=\"!showMesList\" class=\"message-view-content-content\">\r\n            <div class=\"message-content-top-bar\">\r\n              <span class=\"mes-back-btn-content\">\r\n                <Button type=\"text\" @click=\"backList\">\r\n                  <Icon type=\"ios-arrow-back\"></Icon>&nbsp;&nbsp;返回\r\n                </Button>\r\n              </span>\r\n              <h3 class=\"mes-title\">{{ mes.title }}</h3>\r\n            </div>\r\n            <p class=\"mes-time-content\">\r\n              <Icon type=\"android-time\"></Icon>\r\n              &nbsp;&nbsp;{{ mes.time }}\r\n            </p>\r\n            <div class=\"message-content-body\">\r\n              <p class=\"message-content\" v-html=\"mes.content\">\r\n                {{ mes.content }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  getMessageSendData,\r\n  editMessageSend,\r\n  deleteMessageSend,\r\n  allMessageSend,\r\n} from \"@/api/index\";\r\nexport default {\r\n  name: \"message_index\",\r\n  data() {\r\n    const markAsreadBtn = (h, params) => {\r\n      return h(\r\n        \"Button\",\r\n        {\r\n          props: {\r\n            icon: \"md-eye-off\",\r\n            size: \"small\",\r\n          },\r\n          on: {\r\n            click: () => {\r\n              // 标记已读\r\n              let v = params.row;\r\n              // 转换null为\"\"\r\n              for (let attr in v) {\r\n                if (v[attr] == null) {\r\n                  v[attr] = \"\";\r\n                }\r\n              }\r\n              let str = JSON.stringify(v);\r\n              let data = JSON.parse(str);\r\n              data.status = 1;\r\n              this.loading = true;\r\n              editMessageSend(data).then((res) => {\r\n                this.loading = false;\r\n                if (res.success) {\r\n                  this.$Message.success(\"操作成功\");\r\n                  this.getCount();\r\n                  this.refreshMessage();\r\n                }\r\n              });\r\n            },\r\n          },\r\n        },\r\n        \"标为已读\"\r\n      );\r\n    };\r\n    const deleteRealBtn = (h, params) => {\r\n      return h(\r\n        \"Button\",\r\n        {\r\n          props: {\r\n            icon: \"md-trash\",\r\n            size: \"small\",\r\n          },\r\n          on: {\r\n            click: () => {\r\n              // 彻底删除\r\n              let v = params.row;\r\n              this.loading = true;\r\n              deleteMessageSend({ ids: v.id }).then((res) => {\r\n                this.loading = false;\r\n                if (res.success) {\r\n                  this.$Message.success(\"操作成功\");\r\n                  this.getCount();\r\n                  this.refreshMessage();\r\n                }\r\n              });\r\n            },\r\n          },\r\n        },\r\n        \"删除\"\r\n      );\r\n    };\r\n    return {\r\n      height: \"500px\",\r\n      loading: true,\r\n      params: {\r\n        userId: JSON.parse(Cookies.get(\"userInfo\")).id,\r\n        status: 0,\r\n        pageNumber: 1, // 当前页数\r\n        pageSize: 10, // 页面大小\r\n        sort: \"createTime\", // 默认排序字段\r\n        order: \"desc\", // 默认排序方式\r\n      },\r\n      total: 0,\r\n      mesList: [],\r\n      currentMesType: \"unread\",\r\n      showMesList: true,\r\n      unreadCount: 0,\r\n      hasreadCount: 0,\r\n      mes: {\r\n        title: \"\",\r\n        time: \"\",\r\n        content: \"\",\r\n      },\r\n      columns: [\r\n        {\r\n          type: \"index\",\r\n          width: 60,\r\n          align: \"center\",\r\n        },\r\n        {\r\n          title: \" \",\r\n          key: \"title\",\r\n          align: \"left\",\r\n          ellipsis: true,\r\n          render: (h, params) => {\r\n            return h(\"span\", [\r\n              h(\r\n                \"a\",\r\n                {\r\n                  style: {\r\n                    margin: \"0 30px 0 0\",\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.getContent(params.row);\r\n                    },\r\n                  },\r\n                },\r\n                \"【\" + params.row.type + \"】 \" + params.row.title\r\n              ),\r\n            ]);\r\n          },\r\n        },\r\n        {\r\n          title: \" \",\r\n          key: \"time\",\r\n          align: \"center\",\r\n          width: 190,\r\n          render: (h, params) => {\r\n            return h(\"span\", [\r\n              h(\"Icon\", {\r\n                props: {\r\n                  type: \"md-time\",\r\n                  size: 16,\r\n                },\r\n                style: {\r\n                  margin: \"0 5px 3px 0\",\r\n                },\r\n              }),\r\n              h(\"span\", params.row.createTime),\r\n            ]);\r\n          },\r\n        },\r\n        {\r\n          title: \" \",\r\n          key: \"asread\",\r\n          align: \"center\",\r\n          width: 210,\r\n          render: (h, params) => {\r\n            if (this.currentMesType == \"unread\") {\r\n              return h(\"div\", [markAsreadBtn(h, params)]);\r\n            } else if (this.currentMesType == \"hasread\") {\r\n              return h(\"div\", [deleteRealBtn(h, params)]);\r\n            }\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    changePage(v) {\r\n      this.params.pageNumber = v;\r\n      this.refreshMessage();\r\n    },\r\n    changePageSize(v) {\r\n      this.params.pageSize = v;\r\n      this.refreshMessage();\r\n    },\r\n    refreshMessage() {\r\n      let status = 0;\r\n      let type = this.currentMesType;\r\n      if (type == \"unread\") {\r\n        status = 0;\r\n      } else if (type == \"hasread\") {\r\n        status = 1;\r\n      }\r\n      this.params.status = status;\r\n      this.loading = true;\r\n      getMessageSendData(this.params).then((res) => {\r\n        this.loading = false;\r\n        if (res.success) {\r\n          this.mesList = res.result.content;\r\n          this.total = res.result.totalElements;\r\n          if (type == \"unread\") {\r\n            this.unreadCount = this.total;\r\n          } else if (type == \"hasread\") {\r\n            this.hasreadCount = this.total;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    initMessage() {\r\n      // 是否跳转查看消息详情\r\n      let q = this.$route.query;\r\n      if (q.content) {\r\n        this.getContent(q.content);\r\n      }\r\n      this.getCount(true);\r\n    },\r\n    // 获取消息计数\r\n    getCount(init) {\r\n      this.getUnreadCount(init);\r\n      this.getReadCount();\r\n    },\r\n    // 未读消息计数\r\n    getUnreadCount(init) {\r\n      this.params.status = 0;\r\n      getMessageSendData(this.params).then((res) => {\r\n        if (res.success) {\r\n          if (init) {\r\n            this.loading = false;\r\n            this.mesList = res.result.content;\r\n          }\r\n          this.unreadCount = res.result.totalElements;\r\n          this.$store.commit(\"setMessageCount\", this.unreadCount);\r\n        }\r\n      });\r\n    },\r\n    // 已读消息计数\r\n    getReadCount() {\r\n      this.params.status = 1;\r\n      getMessageSendData(this.params).then((res) => {\r\n        if (res.success) {\r\n          this.hasreadCount = res.result.totalElements;\r\n        }\r\n      });\r\n    },\r\n    deleteMessage(id) {\r\n      deleteMessageSend({ ids: id }).then((res) => {\r\n        if (res.success) {\r\n          this.$Message.success(\"删除成功\");\r\n        }\r\n      });\r\n    },\r\n    setCurrentMesType(type) {\r\n      if (this.currentMesType != type) {\r\n        this.showMesList = true;\r\n      }\r\n      this.currentMesType = type;\r\n      this.params.pageNumber = 1;\r\n      this.refreshMessage();\r\n    },\r\n    getContent(v) {\r\n      this.showMesList = false;\r\n      this.mes.title = v.title;\r\n      this.mes.time = v.createTime;\r\n      this.mes.content = v.content;\r\n      if (v.status == 0) {\r\n        // 标记已读 转换null为\"\"\r\n        for (let attr in v) {\r\n          if (v[attr] == null) {\r\n            v[attr] = \"\";\r\n          }\r\n        }\r\n        let str = JSON.stringify(v);\r\n        let data = JSON.parse(str);\r\n        data.status = 1;\r\n        editMessageSend(data).then((res) => {\r\n          if (res.success) {\r\n            this.getCount();\r\n            this.refreshMessage();\r\n          }\r\n        });\r\n      }\r\n    },\r\n    readAll() {\r\n      allMessageSend(0).then((res) => {\r\n        if (res.success) {\r\n          this.getCount();\r\n          this.refreshMessage();\r\n        }\r\n      });\r\n    },\r\n    deleteAll() {\r\n      allMessageSend(1).then((res) => {\r\n        if (res.success) {\r\n          this.getCount();\r\n          this.refreshMessage();\r\n        }\r\n      });\r\n    },\r\n    backList() {\r\n      this.showMesList = true;\r\n      this.$router.push({\r\n        name: \"message_index\",\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    // 计算高度\r\n    let height = document.documentElement.clientHeight;\r\n    this.height = Number(height - 120) + \"px\";\r\n    this.initMessage();\r\n  },\r\n  watch: {\r\n    // 监听路由变化通过id获取数据\r\n    $route(to, from) {\r\n      if (to.name == \"message_index\") {\r\n        let q = this.$route.query;\r\n        if (q.content) {\r\n          this.initMessage();\r\n          return;\r\n        }\r\n        this.refreshMessage();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"]}]}
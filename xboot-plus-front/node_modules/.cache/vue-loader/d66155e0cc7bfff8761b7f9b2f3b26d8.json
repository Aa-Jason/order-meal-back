{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\register.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\register.vue","mtime":1651629755206},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651770028580},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651770027142},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1651770027415},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1651770042155},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgIi4vcmVnaXN0ZXIubGVzcyI7DQo="},{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmPA","file":"register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"register\">\r\n    <Row\r\n      type=\"flex\"\r\n      justify=\"center\"\r\n      align=\"middle\"\r\n      @keydown.enter.native=\"submitRegist\"\r\n      style=\"height: 100%\"\r\n    >\r\n      <Col class=\"content\">\r\n        <div>\r\n          <Header />\r\n          <Form ref=\"registForm\" :model=\"form\" :rules=\"rules\" class=\"form\">\r\n            <span class=\"register-title\">{{ $t(\"register\") }}</span>\r\n            <FormItem prop=\"username\">\r\n              <Input\r\n                v-model=\"form.username\"\r\n                :maxlength=\"16\"\r\n                size=\"large\"\r\n                clearable\r\n                placeholder=\"请输入注册登录账号\"\r\n              />\r\n            </FormItem>\r\n            <FormItem prop=\"email\">\r\n              <Input\r\n                v-model=\"form.email\"\r\n                size=\"large\"\r\n                clearable\r\n                placeholder=\"请输入邮箱\"\r\n              />\r\n            </FormItem>\r\n            <FormItem prop=\"password\">\r\n              <SetPassword\r\n                size=\"large\"\r\n                v-model=\"form.password\"\r\n                @on-change=\"changeInputPass\"\r\n              />\r\n            </FormItem>\r\n            <FormItem prop=\"mobile\">\r\n              <Input\r\n                v-model=\"form.mobile\"\r\n                size=\"large\"\r\n                clearable\r\n                placeholder=\"请输入手机号\"\r\n              >\r\n                <Select v-model=\"select\" slot=\"prepend\" style=\"width: 70px\">\r\n                  <Option value=\"86\">+86</Option>\r\n                </Select>\r\n              </Input>\r\n            </FormItem>\r\n            <FormItem prop=\"code\" :error=\"errorCode\">\r\n              <Row type=\"flex\" justify=\"space-between\">\r\n                <Input\r\n                  v-model=\"form.code\"\r\n                  size=\"large\"\r\n                  clearable\r\n                  placeholder=\"请输入短信验证码\"\r\n                  :maxlength=\"10\"\r\n                  class=\"input-verify\"\r\n                />\r\n                <CountDownButton\r\n                  ref=\"countDown\"\r\n                  @on-click=\"checkVaptcha\"\r\n                  :autoCountDown=\"false\"\r\n                  size=\"large\"\r\n                  :loading=\"sending\"\r\n                  :text=\"getSms\"\r\n                />\r\n              </Row>\r\n            </FormItem>\r\n          </Form>\r\n          <Row type=\"flex\" justify=\"space-between\">\r\n            <Button\r\n              class=\"register-btn\"\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              :loading=\"loading\"\r\n              @click=\"submitRegist\"\r\n            >\r\n              <span v-if=\"!loading\">{{ $t(\"register\") }}</span>\r\n              <span v-else>{{ $t(\"registering\") }}</span>\r\n            </Button>\r\n            <router-link to=\"/login\">\r\n              <a class=\"to-login\">{{ $t(\"loginNow\") }}</a>\r\n            </router-link>\r\n          </Row>\r\n        </div>\r\n        <Footer />\r\n      </Col>\r\n      <LangSwitch />\r\n    </Row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { vaptchaID, vaptchaOffline, register, sendRegistSms } from \"@/api/index\";\r\nimport {\r\n  validateUsername,\r\n  validateMobile,\r\n  validatePassword,\r\n} from \"@/libs/validate\";\r\nimport Header from \"@/views/main-components/header\";\r\nimport Footer from \"@/views/main-components/footer\";\r\nimport LangSwitch from \"@/views/main-components/lang-switch\";\r\nimport CountDownButton from \"@/views/my-components/xboot/count-down-button\";\r\nimport SetPassword from \"@/views/my-components/xboot/set-password\";\r\nexport default {\r\n  components: {\r\n    CountDownButton,\r\n    LangSwitch,\r\n    SetPassword,\r\n    Header,\r\n    Footer,\r\n  },\r\n  data() {\r\n    return {\r\n      vaptchaObject: null,\r\n      getSms: \"获取验证码\",\r\n      error: false,\r\n      loading: false,\r\n      sending: false,\r\n      select: \"86\",\r\n      errorCode: \"\",\r\n      form: {\r\n        username: \"\",\r\n        password: \"\",\r\n        mobile: \"\",\r\n        code: \"\",\r\n      },\r\n      rules: {\r\n        username: [\r\n          {\r\n            required: true,\r\n            message: \"请输入注册登录账号\",\r\n            trigger: \"blur\",\r\n          },\r\n          { validator: validateUsername, trigger: \"change\" },\r\n        ],\r\n        password: [\r\n          {\r\n            required: true,\r\n            message: \"请输入密码\",\r\n            trigger: \"blur\",\r\n          },\r\n          {\r\n            validator: validatePassword,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        email: [\r\n          { required: true, message: \"请输入邮箱地址\" },\r\n          { type: \"email\", message: \"邮箱格式不正确\" },\r\n        ],\r\n        mobile: [\r\n          {\r\n            required: true,\r\n            message: \"请输入手机号\",\r\n            trigger: \"blur\",\r\n          },\r\n          {\r\n            validator: validateMobile,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    initVaptcha() {\r\n      let that = this;\r\n      vaptcha({\r\n        //配置参数\r\n        vid: vaptchaID, // 验证单元id\r\n        type: \"invisible\", // 展现类型 隐藏式\r\n        offline_server: vaptchaOffline, // 离线验证接口地址 可选但此处不能为空\r\n      }).then(function (vaptchaObj) {\r\n        that.vaptchaObject = vaptchaObj;\r\n        vaptchaObj.listen(\"pass\", function () {\r\n          that.form.token = vaptchaObj.getToken();\r\n          // 验证成功 发送验证码\r\n          that.sendSmsCode();\r\n        });\r\n      });\r\n    },\r\n    checkVaptcha() {\r\n      this.$refs.registForm.validate((valid) => {\r\n        if (valid) {\r\n          this.vaptchaObject.validate(); // 若没验证验证码 开始验证\r\n        }\r\n      });\r\n    },\r\n    sendSmsCode() {\r\n      this.sending = true;\r\n      this.getSms = \"发送中\";\r\n      sendRegistSms(this.form.mobile, this.form).then((res) => {\r\n        this.getSms = \"获取验证码\";\r\n        this.sending = false;\r\n        this.vaptchaObject.reset();\r\n        if (res.success) {\r\n          this.$Message.success(\"发送短信验证码成功\");\r\n          // 开始倒计时\r\n          this.$refs.countDown.startCountDown();\r\n        }\r\n      });\r\n    },\r\n    changeInputPass(v, grade, strength) {\r\n      this.form.passStrength = strength;\r\n    },\r\n    submitRegist() {\r\n      this.$refs.registForm.validate((valid) => {\r\n        if (valid) {\r\n          if (!this.form.code) {\r\n            this.errorCode = \"验证码不能为空\";\r\n            return;\r\n          } else {\r\n            this.errorCode = \"\";\r\n          }\r\n          this.loading = true;\r\n          register(this.form).then((res) => {\r\n            this.loading = false;\r\n            if (res.success) {\r\n              let query = {\r\n                username: this.form.username,\r\n              };\r\n              this.$router.push({\r\n                name: \"register-result\",\r\n                query: query,\r\n              });\r\n            } else {\r\n              this.vaptchaObject.reset();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initVaptcha();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import \"./register.less\";\r\n</style>\r\n"]}]}
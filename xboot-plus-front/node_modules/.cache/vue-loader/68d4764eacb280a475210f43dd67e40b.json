{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\xboot-charts\\dashboard1\\components\\mapCard.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\xboot-charts\\dashboard1\\components\\mapCard.vue","mtime":1651629755249},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651770028580},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651770027142},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1651770027415},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1651770042155},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jYXJkLW1hcCB7DQogIC5pdnUtY2FyZC1oZWFkIHsNCiAgICBib3JkZXItYm90dG9tOiBub25lICFpbXBvcnRhbnQ7DQogIH0NCiAgLmNhcmQtdGl0bGUgew0KICAgIGNvbG9yOiAjNjc3NTdjOw0KICB9DQogIC5yaWdodCB7DQogICAgaGVpZ2h0OiAzNTBweDsNCiAgICAuY29udGVudCB7DQogICAgICBoZWlnaHQ6IDI5MHB4Ow0KICAgICAgd2lkdGg6IDEwMCU7DQogICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["mapCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mapCard.vue","sourceRoot":"src/views/xboot-charts/dashboard1/components","sourcesContent":["<template>\r\n  <div class=\"card-map\">\r\n    <Card>\r\n      <p slot=\"title\" class=\"card-title\">访问统计</p>\r\n      <Row>\r\n        <Col span=\"16\">\r\n          <div style=\"height: 350px\" id=\"map\"></div>\r\n        </Col>\r\n        <Col span=\"8\">\r\n          <Row type=\"flex\" justify=\"center\" align=\"middle\" class=\"right\">\r\n            <div class=\"content\">\r\n              <progressItem\r\n                value=\"1,12,540\"\r\n                title=\"北京\"\r\n                :data=\"72\"\r\n                color=\"#5089de\"\r\n              />\r\n              <progressItem\r\n                value=\"51,480\"\r\n                title=\"上海\"\r\n                :data=\"39\"\r\n                color=\"#23b397\"\r\n              />\r\n              <progressItem\r\n                value=\"45,760 \"\r\n                title=\"深圳\"\r\n                :data=\"61\"\r\n                color=\"#56c2d6\"\r\n              />\r\n              <progressItem\r\n                value=\"98,512\"\r\n                title=\"广州\"\r\n                :data=\"52\"\r\n                color=\"#f8cc6b\"\r\n              />\r\n              <progressItem\r\n                value=\"2,154\"\r\n                title=\"成都\"\r\n                :data=\"28\"\r\n                color=\"#f0643b\"\r\n              />\r\n            </div>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport progressItem from \"./progress\";\r\nimport geoData from \"../../map-data/get-geography-value.js\";\r\nimport cityData from \"../../map-data/get-city-value.js\";\r\nvar chinaJson = require(\"../../map-data/china.json\");\r\nexport default {\r\n  name: \"mapCard\",\r\n  components: {\r\n    progressItem,\r\n  },\r\n  props: {},\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    convertData(data) {\r\n      let res = [];\r\n      let len = data.length;\r\n      for (var i = 0; i < len; i++) {\r\n        var geoCoord = geoData[data[i].name];\r\n        if (geoCoord) {\r\n          res.push({\r\n            name: data[i].name,\r\n            value: geoCoord.concat(data[i].value),\r\n          });\r\n        }\r\n      }\r\n      return res;\r\n    },\r\n    init() {\r\n      let map = echarts.init(document.getElementById(\"map\"), null, { locale: \"ZH\" });\r\n      echarts.registerMap(\"china\", chinaJson);\r\n      map.setOption({\r\n        backgroundColor: \"#FFF\",\r\n        toolbox: {\r\n          show: true,\r\n          left: \"left\",\r\n          top: \"top\",\r\n          feature: {\r\n            dataView: { readOnly: false },\r\n            restore: {},\r\n            saveAsImage: {},\r\n          },\r\n        },\r\n        geo: {\r\n          map: \"china\",\r\n          label: {\r\n            emphasis: {\r\n              show: false,\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              areaColor: \"#EFEFEF\",\r\n              borderColor: \"#CCC\",\r\n            },\r\n            emphasis: {\r\n              areaColor: \"#E5E5E5\",\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          containLabel: true,\r\n        },\r\n        series: [\r\n          {\r\n            type: \"scatter\",\r\n            coordinateSystem: \"geo\",\r\n            data: this.convertData(cityData),\r\n            symbolSize: function (val) {\r\n              return val[2] / 10;\r\n            },\r\n            label: {\r\n              normal: {\r\n                formatter: \"{b}\",\r\n                position: \"right\",\r\n                show: false,\r\n              },\r\n              emphasis: {\r\n                show: true,\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: \"#63a3f9\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      });\r\n\r\n      window.addEventListener(\"resize\", function () {\r\n        map.resize();\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.card-map {\r\n  .ivu-card-head {\r\n    border-bottom: none !important;\r\n  }\r\n  .card-title {\r\n    color: #67757c;\r\n  }\r\n  .right {\r\n    height: 350px;\r\n    .content {\r\n      height: 290px;\r\n      width: 100%;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n}\r\n</style>"]}]}
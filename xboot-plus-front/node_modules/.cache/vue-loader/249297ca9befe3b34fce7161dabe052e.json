{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\my-components\\xboot\\file-upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\my-components\\xboot\\file-upload.vue","mtime":1651629755193},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1651770037115},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyB1cGxvYWRGaWxlIH0gZnJvbSAiQC9hcGkvaW5kZXgiOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiZmlsZVVwbG9hZCIsDQogIHByb3BzOiB7DQogICAgdmFsdWU6IG51bGwsDQogICAgc2l6ZTogU3RyaW5nLA0KICAgIHR5cGU6IFN0cmluZywNCiAgICBtdWx0aTogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IGZhbHNlLA0KICAgIH0sDQogICAgbGltaXQ6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIGRlZmF1bHQ6IDEwLA0KICAgIH0sDQogICAgZ2hvc3Q6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZWZhdWx0OiBmYWxzZSwNCiAgICB9LA0KICAgIGRpc2FibGVkOiB7DQogICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgZGVmYXVsdDogZmFsc2UsDQogICAgfSwNCiAgICBzaGFwZTogU3RyaW5nLA0KICAgIGljb246IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICJpb3MtY2xvdWQtdXBsb2FkLW91dGxpbmUiLA0KICAgIH0sDQogICAgdGV4dDogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogIuS4iuS8oOaWh+S7tiIsDQogICAgfSwNCiAgICBtYXhTaXplOiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICBkZWZhdWx0OiA1LA0KICAgIH0sDQogICAgYWNjZXB0OiBTdHJpbmcsDQogICAgc2hvd1VwbG9hZDogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IHRydWUsDQogICAgfSwNCiAgICBub0RhdGFUZXh0OiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAi5pqC5peg5pWw5o2uIiwNCiAgICB9LA0KICAgIHNob3dUaXA6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZWZhdWx0OiB0cnVlLA0KICAgIH0sDQogICAgdGlwU2l6ZTogew0KICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgZGVmYXVsdDogNTAsDQogICAgfSwNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBmb3JtYXQoKSB7DQogICAgICBpZiAodGhpcy5hY2NlcHQpIHsNCiAgICAgICAgbGV0IGZvcm1hdCA9IFtdOw0KICAgICAgICB0aGlzLmFjY2VwdC5zcGxpdCgiLCIpLmZvckVhY2goKGUpID0+IHsNCiAgICAgICAgICBmb3JtYXQucHVzaChlLnJlcGxhY2UoIi4iLCAiIikucmVwbGFjZSgiICIsICIiKSk7DQogICAgICAgIH0pOw0KICAgICAgICByZXR1cm4gZm9ybWF0Ow0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgfQ0KICAgIH0sDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGFjY2Vzc1Rva2VuOiB7fSwNCiAgICAgIGN1cnJlbnRWYWx1ZTogdGhpcy52YWx1ZSwNCiAgICAgIHVwbG9hZEZpbGVVcmw6IHVwbG9hZEZpbGUsDQogICAgICBmaWxlTGlzdDogW10sDQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGluaXQoKSB7DQogICAgICB0aGlzLmFjY2Vzc1Rva2VuID0gew0KICAgICAgICBhY2Nlc3NUb2tlbjogdGhpcy5nZXRTdG9yZSgiYWNjZXNzVG9rZW4iKSwNCiAgICAgIH07DQogICAgICB0aGlzLnNldEN1cnJlbnRWYWx1ZSh0aGlzLnZhbHVlKTsNCiAgICB9LA0KICAgIGhhbmRsZUZvcm1hdEVycm9yKGZpbGUpIHsNCiAgICAgIHRoaXMuJE5vdGljZS53YXJuaW5nKHsNCiAgICAgICAgdGl0bGU6ICLkuI3mlK/mjIHnmoTmlofku7bmoLzlvI8iLA0KICAgICAgICBkZXNjOg0KICAgICAgICAgICLmiYDpgInmlofku7bigJggIiArDQogICAgICAgICAgZmlsZS5uYW1lICsNCiAgICAgICAgICAiIOKAmeagvOW8j+S4jeato+ehriwg6K+36YCJ5oupICIgKw0KICAgICAgICAgIHRoaXMuYWNjZXB0ICsNCiAgICAgICAgICAiIOagvOW8j+aWh+S7tiIsDQogICAgICB9KTsNCiAgICB9LA0KICAgIGhhbmRsZU1heFNpemUoZmlsZSkgew0KICAgICAgdGhpcy4kTm90aWNlLndhcm5pbmcoew0KICAgICAgICB0aXRsZTogIuaWh+S7tuWkp+Wwj+i/h+WkpyIsDQogICAgICAgIGRlc2M6DQogICAgICAgICAgIuaJgOmAieaWh+S7tuKAmCAiICsNCiAgICAgICAgICBmaWxlLm5hbWUgKw0KICAgICAgICAgICIg4oCZ5aSn5bCP6L+H5aSnLCDkuI3lvpfotoXov4cgIiArDQogICAgICAgICAgdGhpcy5tYXhTaXplICsNCiAgICAgICAgICAiTS4iLA0KICAgICAgfSk7DQogICAgfSwNCiAgICBiZWZvcmVVcGxvYWQoZmlsZSkgew0KICAgICAgaWYgKHRoaXMubXVsdGkgJiYgdGhpcy5maWxlTGlzdC5sZW5ndGggPj0gdGhpcy5saW1pdCkgew0KICAgICAgICB0aGlzLiRNZXNzYWdlLndhcm5pbmcoIuacgOWkmuWPquiDveS4iuS8oCIgKyB0aGlzLmxpbWl0ICsgIuW8oOWbvueJhyIpOw0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICB9DQogICAgICByZXR1cm4gdHJ1ZTsNCiAgICB9LA0KICAgIGhhbmRsZVN1Y2Nlc3MocmVzLCBmaWxlLCBmaWxlTGlzdCkgew0KICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7DQogICAgICAgIGlmICh0aGlzLm11bHRpKSB7DQogICAgICAgICAgdGhpcy5jdXJyZW50VmFsdWUucHVzaCh7DQogICAgICAgICAgICB1cmw6IHJlcy5yZXN1bHQsDQogICAgICAgICAgICBuYW1lOiBmaWxlLm5hbWUsDQogICAgICAgICAgICBzaXplOiBmaWxlLnNpemUsDQogICAgICAgICAgfSk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy5jdXJyZW50VmFsdWUgPSB7DQogICAgICAgICAgICB1cmw6IHJlcy5yZXN1bHQsDQogICAgICAgICAgICBuYW1lOiBmaWxlLm5hbWUsDQogICAgICAgICAgICBzaXplOiBmaWxlLnNpemUsDQogICAgICAgICAgfTsNCiAgICAgICAgfQ0KICAgICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMuY3VycmVudFZhbHVlKTsNCiAgICAgICAgdGhpcy4kZW1pdCgib24tY2hhbmdlIiwgdGhpcy5jdXJyZW50VmFsdWUpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgZmlsZS5wZXJjZW50YWdlID0gMDsNCiAgICAgICAgZmlsZS5zdGF0dXMgPSAiZmFpbCI7DQogICAgICAgIGZpbGUubmFtZSArPSAi77yI5LiK5Lyg5aSx6LSl77yJIjsNCiAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcihyZXMubWVzc2FnZSk7DQogICAgICB9DQogICAgfSwNCiAgICBoYW5kbGVFcnJvcihlcnJvciwgZmlsZSwgZmlsZUxpc3QpIHsNCiAgICAgIHRoaXMuJE1lc3NhZ2UuZXJyb3IoZXJyb3IudG9TdHJpbmcoKSk7DQogICAgfSwNCiAgICBoYW5kbGVQcmV2aWV3KGZpbGUpIHsNCiAgICAgIGxldCBzaG93VGlwID0NCiAgICAgICAgdGhpcy5zaG93VGlwICYmIGZpbGUuc2l6ZSAmJiBmaWxlLnNpemUgPiB0aGlzLnRpcFNpemUgKiAxMDI0ICogMTAyNDsNCiAgICAgIGlmIChzaG93VGlwKSB7DQogICAgICAgIHRoaXMuJE1vZGFsLmNvbmZpcm0oew0KICAgICAgICAgIHRpdGxlOiAi5paH5Lu26L6D5aSn5o+Q56S6IiwNCiAgICAgICAgICBjb250ZW50OiAi6K+l5paH5Lu25aSn5bCP5bey6LaF6L+HICIgKyB0aGlzLnRpcFNpemUgKyAiIE1C77yM56Gu6K6k5LiL6L2977yfIiwNCiAgICAgICAgICBva1RleHQ6ICLnu6fnu63kuIvovb0iLA0KICAgICAgICAgIG9uT2s6ICgpID0+IHsNCiAgICAgICAgICAgIHRoaXMuZG93bmxvYWQoZmlsZSk7DQogICAgICAgICAgfSwNCiAgICAgICAgfSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLmRvd25sb2FkKGZpbGUpOw0KICAgICAgfQ0KICAgIH0sDQogICAgZG93bmxvYWQoZmlsZSkgew0KICAgICAgaWYgKCFmaWxlLnVybCkgew0KICAgICAgICB0aGlzLiRNZXNzYWdlLmVycm9yKCLml6DmlYjnmoTpk77mjqUiKTsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgd2luZG93Lm9wZW4oDQogICAgICAgIGZpbGUudXJsICsNCiAgICAgICAgICAiP2F0dG5hbWU9JnJlc3BvbnNlLWNvbnRlbnQtdHlwZT1hcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0mZmlsZW5hbWU9IiArDQogICAgICAgICAgZmlsZS5uYW1lDQogICAgICApOw0KICAgIH0sDQogICAgaGFuZGxlUmVtb3ZlKGZpbGUsIGZpbGVMaXN0KSB7DQogICAgICBpZiAodGhpcy5tdWx0aSkgew0KICAgICAgICBsZXQgcmUgPSBbXTsNCiAgICAgICAgZmlsZUxpc3QuZm9yRWFjaCgoZSkgPT4gew0KICAgICAgICAgIGlmIChlLnN0YXR1cyA9PSAiZmluaXNoZWQiKSB7DQogICAgICAgICAgICByZS5wdXNoKHsNCiAgICAgICAgICAgICAgdXJsOiBlLnVybCwNCiAgICAgICAgICAgICAgbmFtZTogZS5uYW1lLA0KICAgICAgICAgICAgICBzaXplOiBlLnNpemUsDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgICAgICB0aGlzLmZpbGVMaXN0ID0gcmU7DQogICAgICAgIHRoaXMuY3VycmVudFZhbHVlID0gcmU7DQogICAgICB9IGVsc2Ugew0KICAgICAgICBpZiAoZmlsZUxpc3QubGVuZ3RoID4gMCAmJiBmaWxlTGlzdFswXS5zdGF0dXMgPT0gImZpbmlzaGVkIikgew0KICAgICAgICAgIHRoaXMuY3VycmVudFZhbHVlID0gew0KICAgICAgICAgICAgdXJsOiBmaWxlTGlzdFswXS51cmwsDQogICAgICAgICAgICBuYW1lOiBmaWxlTGlzdFswXS5uYW1lLA0KICAgICAgICAgICAgc2l6ZTogZmlsZUxpc3RbMF0uc2l6ZSwNCiAgICAgICAgICB9Ow0KICAgICAgICAgIHRoaXMuZmlsZUxpc3QgPSBbdGhpcy5jdXJyZW50VmFsdWVdOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRoaXMuY3VycmVudFZhbHVlID0ge307DQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHRoaXMuJGVtaXQoImlucHV0IiwgdGhpcy5jdXJyZW50VmFsdWUpOw0KICAgICAgdGhpcy4kZW1pdCgib24tY2hhbmdlIiwgdGhpcy5jdXJyZW50VmFsdWUpOw0KICAgIH0sDQogICAgc2V0Q3VycmVudFZhbHVlKHYpIHsNCiAgICAgIGlmICghdi5sZW5ndGggJiYgdi5sZW5ndGggIT0gMCkgew0KICAgICAgICAvLyDljZXkuKoNCiAgICAgICAgaWYgKHRoaXMubXVsdGkpIHsNCiAgICAgICAgICB0aGlzLiRNZXNzYWdlLndhcm5pbmcoIuWkmuS4quS4iuS8oOS7heaUr+aMgeS8oOWFpeaVsOe7hOaVsOaNruexu+WeiyIpOw0KICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoIXYubmFtZSAmJiAhdi51cmwpIHsNCiAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgdGhpcy5jdXJyZW50VmFsdWUgPSB2Ow0KICAgICAgICB0aGlzLmZpbGVMaXN0LnB1c2godik7DQogICAgICB9IGVsc2Ugew0KICAgICAgICAvLyDlpJrkuKoNCiAgICAgICAgaWYgKCF0aGlzLm11bHRpKSB7DQogICAgICAgICAgdGhpcy4kTWVzc2FnZS53YXJuaW5nKCLljZXkuKrkuIrkvKDku4XmlK/mjIHkvKDlhaXlrZfnrKbkuLLmlbDmja7nsbvlnosiKTsNCiAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgaWYgKHYubGVuZ3RoID4gdGhpcy5saW1pdCkgew0KICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5saW1pdDsgaSsrKSB7DQogICAgICAgICAgICB0aGlzLmZpbGVMaXN0LnB1c2goew0KICAgICAgICAgICAgICB1cmw6IHZbaV0udXJsLA0KICAgICAgICAgICAgICBuYW1lOiB2W2ldLm5hbWUsDQogICAgICAgICAgICAgIHNpemU6IHZbaV0uc2l6ZSwNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0NCiAgICAgICAgICB0aGlzLmN1cnJlbnRWYWx1ZSA9IHRoaXMuZmlsZUxpc3Q7DQogICAgICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCB0aGlzLmN1cnJlbnRWYWx1ZSk7DQogICAgICAgICAgdGhpcy4kTWVzc2FnZS53YXJuaW5nKCLmnIDlpJrlj6rog73kuIrkvKAiICsgdGhpcy5saW1pdCArICLkuKrmlofku7YiKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLmN1cnJlbnRWYWx1ZSA9IHY7DQogICAgICAgICAgdGhpcy5maWxlTGlzdCA9IHY7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHRoaXMuY291bnQgPSB0aGlzLmN1cnJlbnRWYWx1ZS5sZW5ndGg7DQogICAgICB0aGlzLiRlbWl0KCJvbi1jaGFuZ2UiLCB0aGlzLmN1cnJlbnRWYWx1ZSk7DQogICAgfSwNCiAgICBjbGVhcigpIHsNCiAgICAgIHRoaXMuJHJlZnMudXBsb2FkLmNsZWFyRmlsZXMoKTsNCiAgICAgIGlmICh0aGlzLm11bHRpKSB7DQogICAgICAgIHRoaXMuY3VycmVudFZhbHVlID0gW107DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLmN1cnJlbnRWYWx1ZSA9IHt9Ow0KICAgICAgfQ0KICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCB0aGlzLmN1cnJlbnRWYWx1ZSk7DQogICAgICB0aGlzLiRlbWl0KCJvbi1jaGFuZ2UiLCB0aGlzLmN1cnJlbnRWYWx1ZSk7DQogICAgfSwNCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICB2YWx1ZSh2YWwpIHsNCiAgICAgIHRoaXMuc2V0Q3VycmVudFZhbHVlKHZhbCk7DQogICAgfSwNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmluaXQoKTsNCiAgfSwNCn07DQo="},{"version":3,"sources":["file-upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"file-upload.vue","sourceRoot":"src/views/my-components/xboot","sourcesContent":["<template>\r\n  <div>\r\n    <div :class=\"{ 'file-upload-wrap-nobutton': !showUpload }\">\r\n      <Upload\r\n        :action=\"uploadFileUrl\"\r\n        :headers=\"accessToken\"\r\n        :on-success=\"handleSuccess\"\r\n        :on-error=\"handleError\"\r\n        :format=\"format\"\r\n        :accept=\"accept\"\r\n        :max-size=\"maxSize * 1024\"\r\n        :on-format-error=\"handleFormatError\"\r\n        :on-exceeded-size=\"handleMaxSize\"\r\n        :before-upload=\"beforeUpload\"\r\n        :default-file-list=\"fileList\"\r\n        :on-preview=\"handlePreview\"\r\n        :on-remove=\"handleRemove\"\r\n        ref=\"upload\"\r\n      >\r\n        <Button\r\n          :type=\"type\"\r\n          :ghost=\"ghost\"\r\n          :shape=\"shape\"\r\n          :size=\"size\"\r\n          :disabled=\"disabled\"\r\n          :icon=\"icon\"\r\n          v-show=\"showUpload\"\r\n          >{{ text }}</Button\r\n        >\r\n      </Upload>\r\n      <span v-show=\"!showUpload && fileList.length < 1\">{{ noDataText }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { uploadFile } from \"@/api/index\";\r\nexport default {\r\n  name: \"fileUpload\",\r\n  props: {\r\n    value: null,\r\n    size: String,\r\n    type: String,\r\n    multi: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 10,\r\n    },\r\n    ghost: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    shape: String,\r\n    icon: {\r\n      type: String,\r\n      default: \"ios-cloud-upload-outline\",\r\n    },\r\n    text: {\r\n      type: String,\r\n      default: \"上传文件\",\r\n    },\r\n    maxSize: {\r\n      type: Number,\r\n      default: 5,\r\n    },\r\n    accept: String,\r\n    showUpload: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    noDataText: {\r\n      type: String,\r\n      default: \"暂无数据\",\r\n    },\r\n    showTip: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    tipSize: {\r\n      type: Number,\r\n      default: 50,\r\n    },\r\n  },\r\n  computed: {\r\n    format() {\r\n      if (this.accept) {\r\n        let format = [];\r\n        this.accept.split(\",\").forEach((e) => {\r\n          format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\r\n        });\r\n        return format;\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      accessToken: {},\r\n      currentValue: this.value,\r\n      uploadFileUrl: uploadFile,\r\n      fileList: [],\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.accessToken = {\r\n        accessToken: this.getStore(\"accessToken\"),\r\n      };\r\n      this.setCurrentValue(this.value);\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"不支持的文件格式\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’格式不正确, 请选择 \" +\r\n          this.accept +\r\n          \" 格式文件\",\r\n      });\r\n    },\r\n    handleMaxSize(file) {\r\n      this.$Notice.warning({\r\n        title: \"文件大小过大\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’大小过大, 不得超过 \" +\r\n          this.maxSize +\r\n          \"M.\",\r\n      });\r\n    },\r\n    beforeUpload(file) {\r\n      if (this.multi && this.fileList.length >= this.limit) {\r\n        this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    handleSuccess(res, file, fileList) {\r\n      if (res.success) {\r\n        if (this.multi) {\r\n          this.currentValue.push({\r\n            url: res.result,\r\n            name: file.name,\r\n            size: file.size,\r\n          });\r\n        } else {\r\n          this.currentValue = {\r\n            url: res.result,\r\n            name: file.name,\r\n            size: file.size,\r\n          };\r\n        }\r\n        this.$emit(\"input\", this.currentValue);\r\n        this.$emit(\"on-change\", this.currentValue);\r\n      } else {\r\n        file.percentage = 0;\r\n        file.status = \"fail\";\r\n        file.name += \"（上传失败）\";\r\n        this.$Message.error(res.message);\r\n      }\r\n    },\r\n    handleError(error, file, fileList) {\r\n      this.$Message.error(error.toString());\r\n    },\r\n    handlePreview(file) {\r\n      let showTip =\r\n        this.showTip && file.size && file.size > this.tipSize * 1024 * 1024;\r\n      if (showTip) {\r\n        this.$Modal.confirm({\r\n          title: \"文件较大提示\",\r\n          content: \"该文件大小已超过 \" + this.tipSize + \" MB，确认下载？\",\r\n          okText: \"继续下载\",\r\n          onOk: () => {\r\n            this.download(file);\r\n          },\r\n        });\r\n      } else {\r\n        this.download(file);\r\n      }\r\n    },\r\n    download(file) {\r\n      if (!file.url) {\r\n        this.$Message.error(\"无效的链接\");\r\n        return;\r\n      }\r\n      window.open(\r\n        file.url +\r\n          \"?attname=&response-content-type=application/octet-stream&filename=\" +\r\n          file.name\r\n      );\r\n    },\r\n    handleRemove(file, fileList) {\r\n      if (this.multi) {\r\n        let re = [];\r\n        fileList.forEach((e) => {\r\n          if (e.status == \"finished\") {\r\n            re.push({\r\n              url: e.url,\r\n              name: e.name,\r\n              size: e.size,\r\n            });\r\n          }\r\n        });\r\n        this.fileList = re;\r\n        this.currentValue = re;\r\n      } else {\r\n        if (fileList.length > 0 && fileList[0].status == \"finished\") {\r\n          this.currentValue = {\r\n            url: fileList[0].url,\r\n            name: fileList[0].name,\r\n            size: fileList[0].size,\r\n          };\r\n          this.fileList = [this.currentValue];\r\n        } else {\r\n          this.currentValue = {};\r\n        }\r\n      }\r\n      this.$emit(\"input\", this.currentValue);\r\n      this.$emit(\"on-change\", this.currentValue);\r\n    },\r\n    setCurrentValue(v) {\r\n      if (!v.length && v.length != 0) {\r\n        // 单个\r\n        if (this.multi) {\r\n          this.$Message.warning(\"多个上传仅支持传入数组数据类型\");\r\n          return;\r\n        }\r\n        if (!v.name && !v.url) {\r\n          return;\r\n        }\r\n        this.currentValue = v;\r\n        this.fileList.push(v);\r\n      } else {\r\n        // 多个\r\n        if (!this.multi) {\r\n          this.$Message.warning(\"单个上传仅支持传入字符串数据类型\");\r\n          return;\r\n        }\r\n        if (v.length > this.limit) {\r\n          for (let i = 0; i < this.limit; i++) {\r\n            this.fileList.push({\r\n              url: v[i].url,\r\n              name: v[i].name,\r\n              size: v[i].size,\r\n            });\r\n          }\r\n          this.currentValue = this.fileList;\r\n          this.$emit(\"input\", this.currentValue);\r\n          this.$Message.warning(\"最多只能上传\" + this.limit + \"个文件\");\r\n        } else {\r\n          this.currentValue = v;\r\n          this.fileList = v;\r\n        }\r\n      }\r\n      this.count = this.currentValue.length;\r\n      this.$emit(\"on-change\", this.currentValue);\r\n    },\r\n    clear() {\r\n      this.$refs.upload.clearFiles();\r\n      if (this.multi) {\r\n        this.currentValue = [];\r\n      } else {\r\n        this.currentValue = {};\r\n      }\r\n      this.$emit(\"input\", this.currentValue);\r\n      this.$emit(\"on-change\", this.currentValue);\r\n    },\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.setCurrentValue(val);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.file-upload-wrap-nobutton {\r\n  .ivu-upload-list {\r\n    margin-top: -20px;\r\n  }\r\n}\r\n</style>\r\n\r\n"]}]}
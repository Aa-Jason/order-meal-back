{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\my-components\\xboot\\editor.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\my-components\\xboot\\editor.vue","mtime":1651629755192},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651770028580},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651770027142},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1651770027415},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1651770042155},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi53LWUtdG9vbGJhciBwLA0KLnctZS10ZXh0LWNvbnRhaW5lciBwLA0KLnctZS1tZW51LXBhbmVsIHAgew0KICBmb250LXNpemU6IDFlbSAhaW1wb3J0YW50Ow0KfQ0KLndhbmdlZGl0b3ItbW9kZWwgew0KICAuaXZ1LW1vZGFsLWJvZHkgew0KICAgIHBhZGRpbmc6IDBweDsNCiAgfQ0KfQ0K"},{"version":3,"sources":["editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editor.vue","sourceRoot":"src/views/my-components/xboot","sourcesContent":["<template>\r\n  <div>\r\n    <div :id=\"id\"></div>\r\n\r\n    <Modal\r\n      v-model=\"showHTMLModal\"\r\n      :mask-closable=\"false\"\r\n      :width=\"900\"\r\n      :fullscreen=\"full\"\r\n      :z-index=\"10001\"\r\n      class=\"wangeditor-model\"\r\n    >\r\n      <div slot=\"header\">\r\n        <div class=\"ivu-modal-header-inner\">编辑HTML代码</div>\r\n        <a @click=\"handleFull\" class=\"modal-fullscreen\">\r\n          <Icon\r\n            v-show=\"!full\"\r\n            type=\"ios-expand\"\r\n            class=\"model-fullscreen-icon\"\r\n          />\r\n          <Icon\r\n            v-show=\"full\"\r\n            type=\"ios-contract\"\r\n            class=\"model-fullscreen-icon\"\r\n          />\r\n        </a>\r\n        <a @click=\"showHTMLModal = false\" class=\"ivu-modal-close\">\r\n          <Icon type=\"ios-close\" class=\"ivu-icon-ios-close\" />\r\n        </a>\r\n      </div>\r\n      <monaco\r\n        id=\"monaco1\"\r\n        v-if=\"showHTMLModal\"\r\n        v-model=\"dataEdit\"\r\n        language=\"html\"\r\n        :height=\"monacoHeight\"\r\n        :showFullscreen=\"false\"\r\n        ref=\"monaco1\"\r\n      />\r\n      <div slot=\"footer\">\r\n        <Button @click=\"editHTMLOk\" type=\"primary\">保存提交</Button>\r\n      </div>\r\n    </Modal>\r\n    <Modal\r\n      v-model=\"showClearModal\"\r\n      :closable=\"false\"\r\n      :mask-closable=\"false\"\r\n      :width=\"416\"\r\n      :footer-hide=\"true\"\r\n      :z-index=\"10001\"\r\n    >\r\n      <div class=\"ivu-modal-confirm\">\r\n        <div class=\"ivu-modal-confirm-head\">\r\n          <div\r\n            class=\"\r\n              ivu-modal-confirm-head-icon ivu-modal-confirm-head-icon-confirm\r\n            \"\r\n          >\r\n            <i class=\"ivu-icon ivu-icon-ios-help-circle\"></i>\r\n          </div>\r\n          <div class=\"ivu-modal-confirm-head-title\">确认清空</div>\r\n        </div>\r\n        <div class=\"ivu-modal-confirm-body\">确认要清空编辑器内容？</div>\r\n        <div class=\"ivu-modal-confirm-footer\">\r\n          <Button type=\"text\" @click=\"showClearModal = false\">取消</Button>\r\n          <Button @click=\"clear\" type=\"primary\">确定</Button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n    <materialCenter\r\n      v-if=\"material\"\r\n      v-model=\"showMaterialImage\"\r\n      @on-change=\"selectImage\"\r\n      :maxSize=\"maxSize\"\r\n      multiple\r\n    />\r\n\r\n    <materialCenter\r\n      v-if=\"material\"\r\n      mode=\"视频\"\r\n      v-model=\"showMaterialVideo\"\r\n      @on-change=\"selectVideo\"\r\n      :maxSize=\"maxSize\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { uploadFile } from \"@/api/index\";\r\nimport E from \"wangeditor\";\r\nimport xss from \"xss\";\r\nimport monaco from \"@/views/my-components/xboot/monaco\";\r\nimport materialCenter from \"@/views/my-components/xboot/material-center\";\r\nexport default {\r\n  components: {\r\n    monaco,\r\n    materialCenter,\r\n  },\r\n  name: \"editor\",\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      default: \"editor\",\r\n    },\r\n    value: String,\r\n    zIndex: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    height: {\r\n      type: [Number, String],\r\n      default: 300,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: \"在这里输入内容\",\r\n    },\r\n    material: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    maxSize: {\r\n      type: Number,\r\n      default: 5,\r\n    },\r\n    base64: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    uploadPic: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    uploadImgTimeout: {\r\n      type: Number,\r\n      default: 10000,\r\n    },\r\n    uploadVideo: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    uploadVideoTimeout: {\r\n      type: Number,\r\n      default: 300000,\r\n    },\r\n    expandHtml: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    expandClear: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    showFullScreen: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    openXss: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      editor: null,\r\n      data: this.value, // 富文本数据\r\n      dataEdit: \"\", // 编辑数据\r\n      showHTMLModal: false, // 显示html\r\n      full: false, // html全屏开关\r\n      showClearModal: false,\r\n      monacoHeight: 500,\r\n      fullHeight: 100,\r\n      showMaterialImage: false,\r\n      showMaterialVideo: false,\r\n    };\r\n  },\r\n  methods: {\r\n    initEditor() {\r\n      let that = this;\r\n      this.editor = new E(`#${this.id}`);\r\n\r\n      const { $, BtnMenu, DropListMenu, PanelMenu, DropList, Panel, Tooltip } =\r\n        E;\r\n      // 扩展菜单\r\n      class EditHTMLMenu extends BtnMenu {\r\n        constructor(editor) {\r\n          const $elem = E.$(\r\n            `<div class=\"w-e-menu\" data-title=\"编辑源代码\"><i class=\"ivu-icon ivu-icon-md-code-working\" style=\"font-size: 22px;\"></i></div>`\r\n          );\r\n          super($elem, editor);\r\n        }\r\n        // 菜单点击事件\r\n        clickHandler() {\r\n          that.editHTML();\r\n        }\r\n        // 菜单激活状态\r\n        tryChangeActive() {}\r\n      }\r\n      class ClearMenu extends BtnMenu {\r\n        constructor(editor) {\r\n          const $elem = E.$(\r\n            `<div class=\"w-e-menu\" data-title=\"清空\"><i class=\"ivu-icon ivu-icon-md-trash\" style=\"font-size: 18px;\"></i></div>`\r\n          );\r\n          super($elem, editor);\r\n        }\r\n        // 菜单点击事件\r\n        clickHandler() {\r\n          that.showClearModal = true;\r\n        }\r\n        // 菜单激活状态\r\n        tryChangeActive() {}\r\n      }\r\n      class ImageMenu extends BtnMenu {\r\n        constructor(editor) {\r\n          const $elem = E.$(\r\n            `<div class=\"w-e-menu\" data-title=\"图片\"><i class=\"w-e-icon-image\"></i></div>`\r\n          );\r\n          super($elem, editor);\r\n        }\r\n        // 菜单点击事件\r\n        clickHandler() {\r\n          that.showMaterialImage = true;\r\n        }\r\n        // 菜单激活状态\r\n        tryChangeActive() {}\r\n      }\r\n      class VideoMenu extends BtnMenu {\r\n        constructor(editor) {\r\n          const $elem = E.$(\r\n            `<div class=\"w-e-menu\" data-title=\"视频\"><i class=\"w-e-icon-play\"></i></div>`\r\n          );\r\n          super($elem, editor);\r\n        }\r\n        // 菜单点击事件\r\n        clickHandler() {\r\n          that.showMaterialVideo = true;\r\n        }\r\n        // 菜单激活状态\r\n        tryChangeActive() {}\r\n      }\r\n      if (this.expandHtml) {\r\n        // 扩展注册菜单 将菜单加入到 editor.config.menus 中\r\n        this.editor.menus.extend(\"editHTMLMenu\", EditHTMLMenu);\r\n        this.editor.config.menus.push(\"editHTMLMenu\");\r\n      }\r\n      if (this.expandClear) {\r\n        this.editor.menus.extend(\"clearMenu\", ClearMenu);\r\n        this.editor.config.menus.push(\"clearMenu\");\r\n      }\r\n\r\n      if (this.material) {\r\n        // 移除原图片视频上传菜单\r\n        this.editor.config.excludeMenus = [\"image\", \"video\"];\r\n        // 添加新素材中心版\r\n        if (this.uploadPic) {\r\n          this.editor.menus.extend(\"imageMenu\", ImageMenu);\r\n          this.editor.config.menus.splice(17, 0, \"imageMenu\");\r\n        }\r\n        if (this.uploadVideo) {\r\n          this.editor.menus.extend(\"videoMenu\", VideoMenu);\r\n          this.editor.config.menus.splice(18, 0, \"videoMenu\");\r\n        }\r\n      }\r\n\r\n      // 全屏\r\n      this.editor.config.showFullScreen = this.showFullScreen;\r\n      // 编辑内容绑定数据\r\n      this.editor.config.onchange = (html) => {\r\n        if (this.openXss) {\r\n          this.data = xss(html);\r\n        } else {\r\n          this.data = html;\r\n        }\r\n        this.$emit(\"input\", this.data);\r\n        this.$emit(\"on-change\", this.data);\r\n      };\r\n      // 高度\r\n      this.editor.config.height = this.height;\r\n      // z-index\r\n      this.editor.config.zIndex = this.zIndex;\r\n      // placeholder\r\n      this.editor.config.placeholder = this.placeholder;\r\n      // 图片上传超时时间\r\n      this.editor.config.uploadImgTimeout = this.uploadImgTimeout;\r\n      // 视频上传超时时间\r\n      this.editor.config.uploadVideoTimeout = this.uploadVideoTimeout;\r\n      // 图片上传\r\n      if (this.uploadPic) {\r\n        if (this.base64) {\r\n          // 使用 base64 保存图片\r\n          this.editor.config.uploadImgShowBase64 = true;\r\n        } else {\r\n          // 配置上传图片服务器端地址\r\n          this.editor.config.uploadImgServer = uploadFile;\r\n          // xboot如要header中传入token鉴权\r\n          this.editor.config.uploadImgHeaders = {\r\n            accessToken: that.getStore(\"accessToken\"),\r\n          };\r\n          this.editor.config.uploadFileName = \"file\";\r\n          this.editor.config.uploadImgHooks = {\r\n            before: function (xhr, editor, files) {\r\n              // 图片上传之前触发\r\n            },\r\n            success: function (xhr, editor, result) {\r\n              // 图片上传并返回结果，图片插入成功之后触发\r\n            },\r\n            fail: function (xhr, editor, result) {\r\n              // 图片上传并返回结果，但图片插入错误时触发\r\n              that.$Message.error(\"上传图片失败\");\r\n            },\r\n            error: function (xhr, editor) {\r\n              // 图片上传出错时触发\r\n              that.$Message.error(\"上传图片出错\");\r\n            },\r\n            timeout: function (xhr, editor) {\r\n              // 图片上传超时时触发\r\n              that.$Message.error(\"上传图片超时\");\r\n            },\r\n            // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\r\n            customInsert: function (insertImg, result, editor) {\r\n              if (result.success == true) {\r\n                let url = result.result;\r\n                insertImg(url);\r\n                that.$Message.success(\"上传图片成功\");\r\n              } else {\r\n                that.$Message.error(result.message);\r\n              }\r\n            },\r\n          };\r\n        }\r\n      }\r\n      // 视频上传\r\n      if (this.uploadVideo) {\r\n        this.editor.config.uploadVideoServer = uploadFile;\r\n        this.editor.config.uploadVideoHeaders = {\r\n          accessToken: that.getStore(\"accessToken\"),\r\n        };\r\n        this.editor.config.uploadVideoName = \"file\";\r\n        this.editor.config.uploadVideoHooks = {\r\n          before: function (xhr, editor, files) {\r\n            // 视频上传之前触发\r\n          },\r\n          success: function (xhr, editor, result) {\r\n            // 视频上传并返回结果，图片插入成功之后触发\r\n          },\r\n          fail: function (xhr, editor, result) {\r\n            // 视频上传并返回结果，但图片插入错误时触发\r\n            that.$Message.error(\"上传视频失败\");\r\n          },\r\n          error: function (xhr, editor) {\r\n            // 图片上传出错时触发\r\n            that.$Message.error(\"上传视频出错\");\r\n          },\r\n          timeout: function (xhr, editor) {\r\n            // 图片上传超时时触发\r\n            that.$Message.error(\"上传视频超时\");\r\n          },\r\n          // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\r\n          customInsert: function (insertVideo, result, editor) {\r\n            if (result.success == true) {\r\n              let url = result.result;\r\n              insertVideo(url);\r\n              that.$Message.success(\"上传视频成功\");\r\n            } else {\r\n              that.$Message.error(result.message);\r\n            }\r\n          },\r\n        };\r\n      }\r\n      this.editor.config.customAlert = (info) => {\r\n        // info 是需要提示的内容\r\n        // this.$Message.info(info);\r\n      };\r\n      this.editor.create();\r\n      if (this.value) {\r\n        if (this.openXss) {\r\n          this.editor.txt.html(xss(this.value));\r\n        } else {\r\n          this.editor.txt.html(this.value);\r\n        }\r\n      }\r\n    },\r\n    selectImage(v) {\r\n      v.forEach((e) => {\r\n        this.editor.cmd.do(\r\n          \"insertHTML\",\r\n          `<img src=\"${e}\" contenteditable=\"false\" style=\"max-width: 100%;\"/>`\r\n        );\r\n      });\r\n    },\r\n    selectVideo(v) {\r\n      this.editor.cmd.do(\r\n        \"insertHTML\",\r\n        `<video src=\"${v}\"  controls=\"controls\" style=\"max-width:100%\"></video>`\r\n      );\r\n    },\r\n    handleFull() {\r\n      this.full = !this.full;\r\n      if (this.full) {\r\n        this.monacoHeight = this.fullHeight;\r\n      } else {\r\n        this.monacoHeight = 500;\r\n      }\r\n      setTimeout(() => {\r\n        this.$refs.monaco1.layout();\r\n      }, 10);\r\n    },\r\n    editHTML() {\r\n      this.dataEdit = this.data;\r\n      this.showHTMLModal = true;\r\n    },\r\n    editHTMLOk() {\r\n      this.editor.txt.html(this.dataEdit);\r\n      this.$emit(\"input\", this.dataEdit);\r\n      this.$emit(\"on-change\", this.dataEdit);\r\n      this.showHTMLModal = false;\r\n    },\r\n    clear() {\r\n      this.data = \"\";\r\n      this.editor.txt.html(this.data);\r\n      this.$emit(\"input\", this.data);\r\n      this.$emit(\"on-change\", this.data);\r\n      this.showClearModal = false;\r\n    },\r\n    setData(value) {\r\n      if (!this.editor) {\r\n        this.initEditor();\r\n      }\r\n      if (value != this.data) {\r\n        this.data = value;\r\n        this.editor.txt.html(this.data);\r\n        this.$emit(\"input\", this.data);\r\n        this.$emit(\"on-change\", this.data);\r\n      }\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    // 调用销毁 API 对当前编辑器实例进行销毁\r\n    if (this.editor != null) {\r\n      this.editor.destroy();\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.setData(val);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initEditor();\r\n    this.fullHeight = Number(document.body.clientHeight - 144);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.w-e-toolbar p,\r\n.w-e-text-container p,\r\n.w-e-menu-panel p {\r\n  font-size: 1em !important;\r\n}\r\n.wangeditor-model {\r\n  .ivu-modal-body {\r\n    padding: 0px;\r\n  }\r\n}\r\n</style>\r\n\r\n"]}]}
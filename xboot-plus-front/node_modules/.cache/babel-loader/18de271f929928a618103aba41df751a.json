{"remainingRequest":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\xboot-charts\\dashboard1\\components\\mapCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\src\\views\\xboot-charts\\dashboard1\\components\\mapCard.vue","mtime":1651629755249},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\babel.config.js","mtime":1651629754991},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1651770037115},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651770036753},{"path":"D:\\work\\workspace\\order\\xboot-plus-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1651770027133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsKaW1wb3J0IHByb2dyZXNzSXRlbSBmcm9tICIuL3Byb2dyZXNzIjsKaW1wb3J0IGdlb0RhdGEgZnJvbSAiLi4vLi4vbWFwLWRhdGEvZ2V0LWdlb2dyYXBoeS12YWx1ZS5qcyI7CmltcG9ydCBjaXR5RGF0YSBmcm9tICIuLi8uLi9tYXAtZGF0YS9nZXQtY2l0eS12YWx1ZS5qcyI7Cgp2YXIgY2hpbmFKc29uID0gcmVxdWlyZSgiLi4vLi4vbWFwLWRhdGEvY2hpbmEuanNvbiIpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJtYXBDYXJkIiwKICBjb21wb25lbnRzOiB7CiAgICBwcm9ncmVzc0l0ZW06IHByb2dyZXNzSXRlbQogIH0sCiAgcHJvcHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBtZXRob2RzOiB7CiAgICBjb252ZXJ0RGF0YTogZnVuY3Rpb24gY29udmVydERhdGEoZGF0YSkgewogICAgICB2YXIgcmVzID0gW107CiAgICAgIHZhciBsZW4gPSBkYXRhLmxlbmd0aDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICB2YXIgZ2VvQ29vcmQgPSBnZW9EYXRhW2RhdGFbaV0ubmFtZV07CgogICAgICAgIGlmIChnZW9Db29yZCkgewogICAgICAgICAgcmVzLnB1c2goewogICAgICAgICAgICBuYW1lOiBkYXRhW2ldLm5hbWUsCiAgICAgICAgICAgIHZhbHVlOiBnZW9Db29yZC5jb25jYXQoZGF0YVtpXS52YWx1ZSkKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHJlczsKICAgIH0sCiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICB2YXIgbWFwID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtYXAiKSwgbnVsbCwgewogICAgICAgIGxvY2FsZTogIlpIIgogICAgICB9KTsKICAgICAgZWNoYXJ0cy5yZWdpc3Rlck1hcCgiY2hpbmEiLCBjaGluYUpzb24pOwogICAgICBtYXAuc2V0T3B0aW9uKHsKICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICIjRkZGIiwKICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgbGVmdDogImxlZnQiLAogICAgICAgICAgdG9wOiAidG9wIiwKICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgZGF0YVZpZXc6IHsKICAgICAgICAgICAgICByZWFkT25seTogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcmVzdG9yZToge30sCiAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7fQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ2VvOiB7CiAgICAgICAgICBtYXA6ICJjaGluYSIsCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgYXJlYUNvbG9yOiAiI0VGRUZFRiIsCiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICIjQ0NDIgogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIGFyZWFDb2xvcjogIiNFNUU1RTUiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHRvcDogMCwKICAgICAgICAgIGxlZnQ6IDAsCiAgICAgICAgICByaWdodDogMCwKICAgICAgICAgIGJvdHRvbTogMCwKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgdHlwZTogInNjYXR0ZXIiLAogICAgICAgICAgY29vcmRpbmF0ZVN5c3RlbTogImdlbyIsCiAgICAgICAgICBkYXRhOiB0aGlzLmNvbnZlcnREYXRhKGNpdHlEYXRhKSwKICAgICAgICAgIHN5bWJvbFNpemU6IGZ1bmN0aW9uIHN5bWJvbFNpemUodmFsKSB7CiAgICAgICAgICAgIHJldHVybiB2YWxbMl0gLyAxMDsKICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICJ7Yn0iLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAicmlnaHQiLAogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiAiIzYzYTNmOSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0pOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgZnVuY3Rpb24gKCkgewogICAgICAgIG1hcC5yZXNpemUoKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;;AACA;;AACA;EACAA,eADA;EAEAC;IACAC;EADA,CAFA;EAKAC,SALA;EAMAC,IANA,kBAMA;IACA;EACA,CARA;EASAC;IACAC,WADA,uBACAF,IADA,EACA;MACA;MACA;;MACA;QACA;;QACA;UACAG;YACAP,kBADA;YAEAQ;UAFA;QAIA;MACA;;MACA;IACA,CAdA;IAeAC,IAfA,kBAeA;MACA;QAAAC;MAAA;MACAC;MACAC;QACAC,uBADA;QAEAC;UACAC,UADA;UAEAC,YAFA;UAGAC,UAHA;UAIAC;YACAC;cAAAC;YAAA,CADA;YAEAC,WAFA;YAGAC;UAHA;QAJA,CAFA;QAYAC;UACAX,YADA;UAEAY;YACAC;cACAV;YADA;UADA,CAFA;UAOAW;YACAC;cACAC,oBADA;cAEAC;YAFA,CADA;YAKAJ;cACAG;YADA;UALA;QAPA,CAZA;QA6BAE;UACAb,MADA;UAEAD,OAFA;UAGAe,QAHA;UAIAC,SAJA;UAKAC;QALA,CA7BA;QAoCAC,SACA;UACAC,eADA;UAEAC,uBAFA;UAGAhC,gCAHA;UAIAiC;YACA;UACA,CANA;UAOAb;YACAG;cACAW,gBADA;cAEAC,iBAFA;cAGAxB;YAHA,CADA;YAMAU;cACAV;YADA;UANA,CAPA;UAiBAW;YACAC;cACAa;YADA;UADA;QAjBA,CADA;MApCA;MA+DAC;QACA7B;MACA,CAFA;IAGA;EApFA,CATA;EA+FA8B,OA/FA,qBA+FA;IACA;EACA;AAjGA","names":["name","components","progressItem","props","data","methods","convertData","res","value","init","locale","echarts","map","backgroundColor","toolbox","show","left","top","feature","dataView","readOnly","restore","saveAsImage","geo","label","emphasis","itemStyle","normal","areaColor","borderColor","grid","right","bottom","containLabel","series","type","coordinateSystem","symbolSize","formatter","position","color","window","mounted"],"sourceRoot":"src/views/xboot-charts/dashboard1/components","sources":["mapCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"card-map\">\r\n    <Card>\r\n      <p slot=\"title\" class=\"card-title\">访问统计</p>\r\n      <Row>\r\n        <Col span=\"16\">\r\n          <div style=\"height: 350px\" id=\"map\"></div>\r\n        </Col>\r\n        <Col span=\"8\">\r\n          <Row type=\"flex\" justify=\"center\" align=\"middle\" class=\"right\">\r\n            <div class=\"content\">\r\n              <progressItem\r\n                value=\"1,12,540\"\r\n                title=\"北京\"\r\n                :data=\"72\"\r\n                color=\"#5089de\"\r\n              />\r\n              <progressItem\r\n                value=\"51,480\"\r\n                title=\"上海\"\r\n                :data=\"39\"\r\n                color=\"#23b397\"\r\n              />\r\n              <progressItem\r\n                value=\"45,760 \"\r\n                title=\"深圳\"\r\n                :data=\"61\"\r\n                color=\"#56c2d6\"\r\n              />\r\n              <progressItem\r\n                value=\"98,512\"\r\n                title=\"广州\"\r\n                :data=\"52\"\r\n                color=\"#f8cc6b\"\r\n              />\r\n              <progressItem\r\n                value=\"2,154\"\r\n                title=\"成都\"\r\n                :data=\"28\"\r\n                color=\"#f0643b\"\r\n              />\r\n            </div>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport progressItem from \"./progress\";\r\nimport geoData from \"../../map-data/get-geography-value.js\";\r\nimport cityData from \"../../map-data/get-city-value.js\";\r\nvar chinaJson = require(\"../../map-data/china.json\");\r\nexport default {\r\n  name: \"mapCard\",\r\n  components: {\r\n    progressItem,\r\n  },\r\n  props: {},\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    convertData(data) {\r\n      let res = [];\r\n      let len = data.length;\r\n      for (var i = 0; i < len; i++) {\r\n        var geoCoord = geoData[data[i].name];\r\n        if (geoCoord) {\r\n          res.push({\r\n            name: data[i].name,\r\n            value: geoCoord.concat(data[i].value),\r\n          });\r\n        }\r\n      }\r\n      return res;\r\n    },\r\n    init() {\r\n      let map = echarts.init(document.getElementById(\"map\"), null, { locale: \"ZH\" });\r\n      echarts.registerMap(\"china\", chinaJson);\r\n      map.setOption({\r\n        backgroundColor: \"#FFF\",\r\n        toolbox: {\r\n          show: true,\r\n          left: \"left\",\r\n          top: \"top\",\r\n          feature: {\r\n            dataView: { readOnly: false },\r\n            restore: {},\r\n            saveAsImage: {},\r\n          },\r\n        },\r\n        geo: {\r\n          map: \"china\",\r\n          label: {\r\n            emphasis: {\r\n              show: false,\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              areaColor: \"#EFEFEF\",\r\n              borderColor: \"#CCC\",\r\n            },\r\n            emphasis: {\r\n              areaColor: \"#E5E5E5\",\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          containLabel: true,\r\n        },\r\n        series: [\r\n          {\r\n            type: \"scatter\",\r\n            coordinateSystem: \"geo\",\r\n            data: this.convertData(cityData),\r\n            symbolSize: function (val) {\r\n              return val[2] / 10;\r\n            },\r\n            label: {\r\n              normal: {\r\n                formatter: \"{b}\",\r\n                position: \"right\",\r\n                show: false,\r\n              },\r\n              emphasis: {\r\n                show: true,\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: \"#63a3f9\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      });\r\n\r\n      window.addEventListener(\"resize\", function () {\r\n        map.resize();\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.card-map {\r\n  .ivu-card-head {\r\n    border-bottom: none !important;\r\n  }\r\n  .card-title {\r\n    color: #67757c;\r\n  }\r\n  .right {\r\n    height: 350px;\r\n    .content {\r\n      height: 290px;\r\n      width: 100%;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n}\r\n</style>"]}]}